{"version":3,"sources":["spotify.js","Login.js","StatGauge.js","CardList.js","SearchBar.js","Dashboard.js","App.js","index.js"],"names":["authEndpoint","scopes","getTokenFromResponse","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","deployedLoginUrl","concat","join","loginUrl","Login","react_default","a","createElement","className","src","alt","Button","variant","href","color","StatGauge","_ref","avgForMetrics","metrics","Math","round","b","length","_step","allEnergies","allValences","allLoudnesses","_iterator","_createForOfIteratorHelper","props","s","n","done","track","value","push","energy","valence","loudness","err","e","f","energyAvg","valenceAvg","loudnessAvg","index_esm","text","background","backgroundPadding","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","backgroundColor","textColor","pathColor","trailColor","CardList","Search","styled","theme","Object","defineProperty","position","borderRadius","shape","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","transition","transitions","create","&:focus","SearchBar","_ref5","_useState","useState","_useState2","slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","searchFts","setSearchFts","_useState5","_useState6","spotify","useEffect","searchTracks","limit","offset","then","results","tracks","items","map","getAudioFeaturesForTrack","id","info","temp","name","artists","img","album","images","url","ids","filtered","filter","_ref6","index","includes","toConsumableArray","slice","console","log","html","SearchBar_createForOfIteratorHelper","ret","class","AppBar","Toolbar","Typography","noWrap","component","sx","flexGrow","xs","sm","SearchBar_Search","Search_default","placeholder","inputProps","aria-label","onChange","event","target","Dashboard","setTracks","intForZeroToOne","metric","intForLoudness","pow","decibalToAudioIntensity","getMyTopTracks","acousticness","dancibility","instrumentalness","trackInfo","divRowsFor20MostListened","transformedEnergy","transformedValence","transformedLoudness","Dashboard_createForOfIteratorHelper","row","trackInfoTemp","Box","src_SearchBar","src_StatGauge","createTheme","primary","light","main","dark","contrastText","secondary","SpotifyWebApi","App","_React$useState","React","_React$useState2","token","setToken","_React$useState3","_React$useState4","setUser","_token","access_token","setAccessToken","getMe","user","react","emotion_element_cbed451f_browser_esm","src_Dashboard","src_Login","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.da30b9c0.chunk.js","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId_test = \"c4cbffae207c414eb633445b69de2543\";\r\nconst clientId_deployed = \"9d0dc9720d7a4dca8f0eeb7a146bb258\";\r\nconst redirectUri_test = \"http://localhost:3000/\";\r\nconst redirectUri_deployed =\r\n  \"https://brendanpotter00.github.io/Spotify_Uncovered_v2/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\nexport const deployedLoginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_deployed}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_test}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport { loginUrl } from \"./spotify\";\r\nimport { deployedLoginUrl } from \"./spotify\";\r\nimport \"./login.css\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\r\n        alt=\"Spotify Logo\"\r\n      />\r\n      {/* <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/> */}\r\n\r\n      <Button variant=\"contained\" href={deployedLoginUrl} color=\"primary\">\r\n        login with spotify\r\n      </Button>\r\n      {/* <a href={deployedLoginUrl}>login with spotify</a> */}\r\n\r\n      <button className=\"spotify-button\">\r\n        <a href={loginUrl}>Login for testing</a>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { buildStyles } from \"react-circular-progressbar\";\r\nimport \"./statGauge.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst percentage = 66;\r\nfunction StatGauge({ props }) {\r\n  function avgForMetrics(metrics) {\r\n    return Math.round(metrics.reduce((a, b) => a + b, 0) / metrics.length);\r\n  }\r\n\r\n  //getting all energies, loudnesses, and valences in arrays\r\n  let allEnergies = [];\r\n  let allValences = [];\r\n  let allLoudnesses = [];\r\n  for (let track of props) {\r\n    allEnergies.push(track.energy);\r\n    allValences.push(track.valence);\r\n    allLoudnesses.push(track.loudness);\r\n  }\r\n\r\n  //getting avgerages of all metrics to place in the bars\r\n  let energyAvg = avgForMetrics(allEnergies);\r\n  let valenceAvg = avgForMetrics(allValences);\r\n  let loudnessAvg = avgForMetrics(allLoudnesses);\r\n\r\n  return (\r\n    <div className=\"bars\">\r\n      <div className=\"firstbar\">\r\n        <CircularProgressbar\r\n          className=\"circleBar\"\r\n          value={energyAvg}\r\n          text={`${energyAvg}`}\r\n          background\r\n          backgroundPadding={6}\r\n          styles={buildStyles({\r\n            rotation: 1,\r\n            strokeLinecap: \"round\",\r\n            textSize: \"1.8rem\",\r\n            pathTransitionDuration: 0.5,\r\n            backgroundColor: \"#FDA766\",\r\n            textColor: \"#fff\",\r\n            pathColor: \"#fff\",\r\n            trailColor: \"transparent\",\r\n          })}\r\n        />\r\n        <h3> Energy </h3>\r\n      </div>\r\n      <div className=\"secondbar\">\r\n        <CircularProgressbar\r\n          className=\"circleBar\"\r\n          value={valenceAvg}\r\n          text={`${valenceAvg}`}\r\n          background\r\n          backgroundPadding={6}\r\n          styles={buildStyles({\r\n            rotation: 1,\r\n            strokeLinecap: \"round\",\r\n            textSize: \"1.8rem\",\r\n            pathTransitionDuration: 0.5,\r\n            backgroundColor: \"#FD9346\",\r\n            textColor: \"#fff\",\r\n            pathColor: \"#fff\",\r\n            trailColor: \"transparent\",\r\n          })}\r\n        />\r\n\r\n        <h3> Happiness </h3>\r\n      </div>\r\n      <div className=\"thirdbar\">\r\n        <CircularProgressbar\r\n          className=\"circleBar\"\r\n          value={loudnessAvg}\r\n          text={`${loudnessAvg}`}\r\n          background\r\n          backgroundPadding={6}\r\n          styles={buildStyles({\r\n            rotation: 1,\r\n            strokeLinecap: \"round\",\r\n            textSize: \"1.8rem\",\r\n            pathTransitionDuration: 0.5,\r\n            backgroundColor: \"#FD7F2C\",\r\n            textColor: \"#fff\",\r\n            pathColor: \"#fff\",\r\n            trailColor: \"transparent\",\r\n          })}\r\n        />\r\n        <h3> Loudness </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatGauge;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\n\r\nimport \"./cardList.css\";\r\n\r\nfunction CardList() {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Card />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TrackAnalysis, UserTracks } from \"react-spotify-api\";\r\nimport \"./dashboard.css\";\r\nimport Card from \"./Card.js\";\r\nimport BasicTable from \"./BasicTable.js\";\r\nimport StatGauge from \"./StatGauge\";\r\nimport CardList from \"./CardList\";\r\nimport { Input, List, Avatar } from \"antd\";\r\n\r\n//=======================================================================\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SearchBar({ props }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchFts, setSearchFts] = useState([]);\r\n  const [top, setTop] = useState([]);\r\n\r\n  const spotify = props.spotify;\r\n\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchFts([]);\r\n\r\n    const searchResults = spotify\r\n      .searchTracks(searchTerm, { limit: 3, offset: 1 })\r\n      .then((results) => {\r\n        let resultFts = results.tracks.items.map((track) => {\r\n          spotify.getAudioFeaturesForTrack(track.id).then((info) => {\r\n            let temp = {\r\n              id: track.id,\r\n              name: track.name,\r\n              artists: track.artists[0].name,\r\n              energy: info.energy,\r\n              loudness: info.loudness,\r\n              valence: info.valence,\r\n              img: track.album.images[0].url,\r\n            };\r\n            let ids = searchFts.map((track) => track.id);\r\n            let names = searchFts.map((track) => track.name);\r\n            let filtered = searchFts.filter(\r\n              ({ id }, index) => !ids.includes(id, index + 1)\r\n            );\r\n            setSearchFts((searchFts) => [...searchFts, temp]);\r\n\r\n            // if (!ids.includes(temp.id)) {\r\n            //   setSearchFts((searchFts) => [...searchFts, temp]);\r\n            // }\r\n\r\n            if (filtered.length >= 8) {\r\n              // setSearchFts(top3);\r\n              let top3 = filtered.slice(-3);\r\n              let total = searchFts;\r\n              //setSearchFts(total.slice(-3));\r\n              //console.log(\"INSIDE \" + searchFts.map((t) => t.name));\r\n\r\n              console.log(\"call-------------------------------\");\r\n            }\r\n\r\n            // if (filtered.length >= 3) {\r\n            //   setSearchFts(filtered);\r\n            // }\r\n            // let top3 = searchFts.slice(-3);\r\n            // console.log(top3);\r\n\r\n            console.log(searchFts);\r\n          });\r\n        });\r\n      });\r\n  }, [searchTerm]);\r\n\r\n  let html = [];\r\n\r\n  for (let track of searchFts) {\r\n    const ret = (\r\n      <div class=\"top20Row\">\r\n        <div class=\"top20Img\">\r\n          <img src={track.img} alt={\"Song Cover for\" + track.name} />\r\n        </div>\r\n        <div class=\"songInfo\">\r\n          <div class=\"songName\">{track.name}</div>\r\n          <div class=\"songArtist\">{track.artists}</div>\r\n        </div>\r\n\r\n        <div class=\"songMetrics\">\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Energy: \"}</div>\r\n            <div class=\"stat\">{track.energy}</div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Loudness: \"}</div>\r\n            <div class=\"stat\">{track.loudness}</div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Happiness: \"}</div>\r\n            <div class=\"stat\">{track.valence}</div>\r\n          </div>\r\n          {/* <div class=\"rank\">1</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n    html.push(ret);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            spotify uncovered\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleChange}\r\n              value={searchTerm}\r\n              //onChange={(value) => this.getSearchResults(value.target.value)}\r\n              //onSearch={(value) => console.log(value)}\r\n              //onRequestSearch={searchTracksFunction(search)}\r\n            />\r\n          </Search>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"searchResultsContainer\">\r\n        <div class=\"topResults\">{html}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TrackAnalysis, UserTracks } from \"react-spotify-api\";\r\nimport \"./dashboard.css\";\r\nimport Card from \"./Card.js\";\r\nimport BasicTable from \"./BasicTable.js\";\r\nimport StatGauge from \"./StatGauge\";\r\nimport CardList from \"./CardList\";\r\nimport { Input, List, Avatar } from \"antd\";\r\nimport SearchBar from \"./SearchBar.js\";\r\n\r\n//=======================================================================\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Dashboard({ props }) {\r\n  const spotify = props.spotify;\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  //FUNCTION CREATION HERE===============================================\r\n  // valence: float 0-1\r\n  // loudness: float 0-60 DB\r\n  // energy: float 0-1\r\n  //https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features\r\n\r\n  function intForZeroToOne(metric) {\r\n    return Math.round(metric * 100);\r\n  }\r\n\r\n  function decibalToAudioIntensity(metric) {\r\n    // let audioIntensity = 10 ** ((metric * -1) / 10 - 12);\r\n    return 10 ** ((metric * -1) / 10 - 12);\r\n  }\r\n  function intForLoudness(metric) {\r\n    let temp = 10 * (decibalToAudioIntensity(metric) * 10 ** 12);\r\n    //scaling it to 1-14\r\n    temp = Math.round((temp / 14) * 10);\r\n\r\n    if (temp >= 100) {\r\n      temp = 100;\r\n    }\r\n\r\n    return temp;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let trackList = [];\r\n    spotify.getMyTopTracks().then(\r\n      (tracks) => {\r\n        let trackFts = tracks.items.map((track) => {\r\n          spotify.getAudioFeaturesForTrack(track.id).then((results) => {\r\n            let temp = {\r\n              id: track.id,\r\n              name: track.name,\r\n              artists: track.artists[0].name,\r\n              energy: results.energy,\r\n              loudness: results.loudness,\r\n              acousticness: results.acousticness,\r\n              valence: results.valence,\r\n              dancibility: results.dancibility,\r\n              instrumentalness: results.instrumentalness,\r\n              img: track.album.images[0].url,\r\n            };\r\n\r\n            setTracks((tracks) => [...tracks, temp]);\r\n          });\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log(\"Error:\", err);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  //create an item then map it to a card in typescript\r\n  const trackInfo = [];\r\n  const divRowsFor20MostListened = [];\r\n  //variables for 1-10 metric transformation===================================\r\n  let transformedEnergy = 0;\r\n  let transformedValence = 0;\r\n  let transformedLoudness = 0;\r\n\r\n  for (let item of tracks) {\r\n    //FUNCTION FOR TRANSFORMING METRICS FOR CARDS HERE=============================\r\n    transformedEnergy = intForZeroToOne(item.energy);\r\n    transformedValence = intForZeroToOne(item.valence);\r\n    transformedLoudness = intForLoudness(item.loudness);\r\n    const row = (\r\n      <div class=\"top20Row\">\r\n        <div class=\"top20Img\">\r\n          <img src={item.img} alt={\"Song Cover for\" + item.name} />\r\n        </div>\r\n        <div class=\"songInfo\">\r\n          <div class=\"songName\">{item.name}</div>\r\n          <div class=\"songArtist\">{item.artists}</div>\r\n        </div>\r\n\r\n        <div class=\"songMetrics\">\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Energy: \"}</div>\r\n            <div class=\"stat\">{transformedEnergy}</div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Loudness: \"}</div>\r\n            <div class=\"stat\">{transformedLoudness}</div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Happiness: \"}</div>\r\n            <div class=\"stat\">{transformedValence}</div>\r\n          </div>\r\n          {/* <div class=\"rank\">1</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n    divRowsFor20MostListened.push(row);\r\n\r\n    //FUNCTION FOR FINDING METRIC AVGS=============================\r\n    //below probably goes inside function\r\n    let trackInfoTemp = {\r\n      name: item.name,\r\n      artists: item.artists,\r\n      energy: transformedEnergy,\r\n      loudness: transformedLoudness,\r\n      valence: transformedValence,\r\n      img: item.img,\r\n    };\r\n    trackInfo.push(trackInfoTemp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard_container\">\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <SearchBar props={props} />\r\n      </Box>\r\n      <StatGauge props={trackInfo} />\r\n      <div class=\"top20Table\">{divRowsFor20MostListened}</div>\r\n      {/* <BasicTable props={trackInfo} /> */}\r\n      {/* <CardList /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import \"./App.css\";\r\nimport Login from \"./Login.js\";\r\nimport Dashboard from \"./Dashboard.js\";\r\n// import React, { useEffect, useState } from \"react\";\r\nimport { getTokenFromResponse } from \"./spotify.js\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#DF7C52\",\r\n      main: \"#d85c27\",\r\n      dark: \"#97401B\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#587CA5\",\r\n      main: \"#2f5c8f\",\r\n      dark: \"#204064\",\r\n      contrastText: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nfunction App() {\r\n  const [token, setToken] = React.useState(null);\r\n  const [user, setUser] = React.useState(null);\r\n\r\n  //This function sets the access token and gets the user with the access code given from the spotify api\r\n  React.useEffect(() => {\r\n    //code...\r\n    const hash = getTokenFromResponse();\r\n    window.location.hash = \"\";\r\n    const _token = hash.access_token;\r\n\r\n    if (_token) {\r\n      setToken(_token);\r\n\r\n      spotify.setAccessToken(_token);\r\n      //grabbing the user\r\n      spotify.getMe().then((user) => {\r\n        setUser(user);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  let props = {\r\n    spotify: spotify,\r\n    token: token,\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        {token ? <Dashboard props={props} /> : <Login />}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["spotify.js","Login.js","Phrases.js","StatGauge.js","CardList.js","SearchBar.js","Dashboard.js","App.js","index.js"],"names":["authEndpoint","scopes","getTokenFromResponse","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","deployedLoginUrl","concat","join","loginUrl","Login","react_default","a","createElement","className","src","alt","Button","variant","href","color","Phrases","_ref","props","_useState","useState","_useState2","Object","slicedToArray","phrase","setPhrase","e","energy","v","valence","l","loudness","isLow","value","isLowMed","isMed","isMedHigh","isHigh","onClick","StatGauge","avgForMetrics","metrics","Math","round","b","length","_step","allEnergies","allValences","allLoudnesses","_iterator","_createForOfIteratorHelper","s","n","done","track","push","err","f","energyAvg","valenceAvg","loudnessAvg","phraseProps","index_esm","text","background","backgroundPadding","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","backgroundColor","textColor","pathColor","trailColor","src_Phrases","CardList","Search","styled","theme","defineProperty","position","borderRadius","shape","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","transition","transitions","create","&:focus","SearchBar","_ref5","searchTerm","setSearchTerm","_useState3","_useState4","searchFts","setSearchFts","_useState5","_useState6","spotify","useEffect","searchTracks","limit","offset","then","results","tracks","items","map","getAudioFeaturesForTrack","id","info","temp","name","artists","img","album","images","url","ids","filtered","filter","_ref6","index","includes","toConsumableArray","slice","console","log","html","SearchBar_createForOfIteratorHelper","ret","class","AppBar","Toolbar","Typography","noWrap","component","sx","flexGrow","xs","sm","SearchBar_Search","Search_default","placeholder","inputProps","aria-label","onChange","event","target","Dashboard","setTracks","intForZeroToOne","metric","intForLoudness","pow","decibalToAudioIntensity","getMyTopTracks","acousticness","dancibility","instrumentalness","trackInfo","divRowsFor20MostListened","transformedEnergy","transformedValence","transformedLoudness","Dashboard_createForOfIteratorHelper","row","trackInfoTemp","Box","src_SearchBar","src_StatGauge","createTheme","primary","light","main","dark","contrastText","secondary","SpotifyWebApi","App","_React$useState","React","_React$useState2","token","setToken","_React$useState3","_React$useState4","setUser","_token","access_token","setAccessToken","getMe","user","react","emotion_element_cbed451f_browser_esm","src_Dashboard","src_Login","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5d7632d.chunk.js","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId_test = \"c4cbffae207c414eb633445b69de2543\";\nconst clientId_deployed = \"9d0dc9720d7a4dca8f0eeb7a146bb258\";\nconst redirectUri_test = \"http://localhost:3000/\";\nconst redirectUri_deployed =\n  \"https://brendanpotter00.github.io/Spotify_Uncovered_v2/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromResponse = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\nexport const deployedLoginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_deployed}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_test}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport { loginUrl } from \"./spotify\";\nimport { deployedLoginUrl } from \"./spotify\";\nimport \"./login.css\";\nimport Button from \"@mui/material/Button\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\n        alt=\"Spotify Logo\"\n      />\n      {/* <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/> */}\n\n      <Button variant=\"contained\" href={deployedLoginUrl} color=\"primary\">\n        login with spotify\n      </Button>\n      {/* <a href={deployedLoginUrl}>login with spotify</a> */}\n\n      <button className=\"spotify-button\">\n        <a href={loginUrl}>Login for testing</a>\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState, Component } from \"react\";\nimport \"./phrases.css\";\n\nfunction Phrases({ props }) {\n  const [phrase, setPhrase] = useState(false);\n  let e = props.energy;\n  let v = props.valence;\n  let l = props.loudness;\n\n  function isLow(value) {\n    return value <= 25;\n  }\n\n  function isLowMed(value) {\n    return value <= 40 && value > 25;\n  }\n\n  function isMed(value) {\n    return value <= 55 && value > 40;\n  }\n\n  function isMedHigh(value) {\n    return value <= 70 && value > 55;\n  }\n\n  function isHigh(value) {\n    return value > 70;\n  }\n\n  function determinePhrase() {\n    if (isLowMed(v) && isMed(e) && isLowMed(l))\n      return \"Feeling kinda meh, huh? It's okay we've all been there\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(l) || isLowMed(l) || isMed(l)) &&\n      (isMedHigh(v) || isHigh(v))\n    )\n      return \"I think you could stand to spice it up a bit. Not EVERY song needs to be a slow song\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(v) || isHigh(v)) &&\n      (isLow(l) || isLowMed(l) || isMed(l))\n    )\n      return \"Aww you're happy AND energetic?? That's so nice... I guess :)\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(l) || isHigh(l)) &&\n      (isLow(v) || isLowMed(v) || isMed(v))\n    )\n      return \"Have you heard of 'chill'? You could use it\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(v) || isLowMed(v) || isMed(v)) &&\n      (isMedHigh(l) || isHigh(l))\n    )\n      return \"You seem like you could use a pick me up. Grab a coffee and go for a walk\";\n    if ((isMedHigh(v) || isHigh(v)) && (isMed(e) || isMedHigh(e) || isHigh(e)))\n      return \"Your music suggests you are doing great. Way to embrace 'fake it till you make it'\";\n    if (isMed(v) && isMed(l) && isMed(e))\n      return \"Nothin wrong with floating in the middle\";\n    if (\n      ((isMed(v) || isMedHigh(v)) && isMed(l) && isMed(e)) ||\n      ((isMed(l) || isMedHigh(l)) && isMed(v) && isMed(e)) ||\n      ((isMed(e) || isMedHigh(e)) && isMed(l) && isMed(v))\n    )\n      return \"Congrats! You're just barely not basic :)\";\n    if (isMed(l) && isMed(e)) return \"Ahhh so you're the mellow type\";\n    if (isHigh(e))\n      return \"Maybe you should lay off the caffeine for a bit, just a suggestion\";\n    if (isHigh(l)) return \"Wow... that's really loud. Maybe take a break?\";\n    if (isLow(v) || isLowMed(v))\n      return \"You seem a bit sad, might I suggest Spotify's 'Mood Booster' playlist\";\n    else return \"I like your tunes!\";\n  }\n\n  const handleChange = () => {\n    setPhrase(true);\n  };\n\n  return (\n    <div className=\"phrase-container\">\n      {/* <div className=\"phrase\">{determinePhrase()}</div> */}\n\n      {phrase ? (\n        <div className=\"phrase\">{determinePhrase()}</div>\n      ) : (\n        <button className=\"phraseButton\" onClick={() => handleChange()}>\n          analyze\n        </button>\n      )}\n      {/* {token ? <Dashboard props={props} /> : <Login />} */}\n    </div>\n  );\n}\n\nexport default Phrases;\n","import React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport { buildStyles } from \"react-circular-progressbar\";\nimport \"./statGauge.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Phrases from \"./Phrases\";\n\nconst percentage = 66;\nfunction StatGauge({ props }) {\n  function avgForMetrics(metrics) {\n    return Math.round(metrics.reduce((a, b) => a + b, 0) / metrics.length);\n  }\n\n  //getting all energies, loudnesses, and valences in arrays\n  let allEnergies = [];\n  let allValences = [];\n  let allLoudnesses = [];\n  for (let track of props) {\n    allEnergies.push(track.energy);\n    allValences.push(track.valence);\n    allLoudnesses.push(track.loudness);\n  }\n\n  //getting avgerages of all metrics to place in the bars\n  let energyAvg = avgForMetrics(allEnergies);\n  let valenceAvg = avgForMetrics(allValences);\n  let loudnessAvg = avgForMetrics(allLoudnesses);\n\n  let phraseProps = {\n    energy: energyAvg,\n    valence: valenceAvg,\n    loudness: loudnessAvg\n  }\n\n  return (\n    <div>\n      <div className=\"bars\">\n        <div className=\"firstbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={energyAvg}\n            text={`${energyAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FDA766\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <h3> Energy </h3>\n        </div>\n        <div className=\"secondbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={valenceAvg}\n            text={`${valenceAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD9346\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n\n          <h3> Happiness </h3>\n        </div>\n        <div className=\"thirdbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={loudnessAvg}\n            text={`${loudnessAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD7F2C\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <h3> Loudness </h3>\n        </div>\n      </div>\n      <Phrases props={phraseProps} />\n    </div>\n  );\n}\n\nexport default StatGauge;\n","import React from \"react\";\nimport Card from \"./Card.js\";\n\nimport \"./cardList.css\";\n\nfunction CardList() {\n  return (\n    <div className=\"card-container\">\n      <Card />\n    </div>\n  );\n}\n\nexport default CardList;\n","import React, { useEffect, useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { TrackAnalysis, UserTracks } from \"react-spotify-api\";\nimport \"./dashboard.css\";\nimport Card from \"./Card.js\";\nimport BasicTable from \"./BasicTable.js\";\nimport StatGauge from \"./StatGauge\";\nimport CardList from \"./CardList\";\n//import { Input, List, Avatar } from \"antd\";\n\n//=======================================================================\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nfunction SearchBar({ props }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchFts, setSearchFts] = useState([]);\n  const [top, setTop] = useState([]);\n\n  const spotify = props.spotify;\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    setSearchFts([]);\n\n    const searchResults = spotify\n      .searchTracks(searchTerm, { limit: 3, offset: 1 })\n      .then((results) => {\n        let resultFts = results.tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((info) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: info.energy,\n              loudness: info.loudness,\n              valence: info.valence,\n              img: track.album.images[0].url,\n            };\n            let ids = searchFts.map((track) => track.id);\n            let names = searchFts.map((track) => track.name);\n            let filtered = searchFts.filter(\n              ({ id }, index) => !ids.includes(id, index + 1)\n            );\n            setSearchFts((searchFts) => [...searchFts, temp]);\n\n            // if (!ids.includes(temp.id)) {\n            //   setSearchFts((searchFts) => [...searchFts, temp]);\n            // }\n\n            if (filtered.length >= 8) {\n              // setSearchFts(top3);\n              let top3 = filtered.slice(-3);\n              let total = searchFts;\n              //setSearchFts(total.slice(-3));\n              //console.log(\"INSIDE \" + searchFts.map((t) => t.name));\n\n              console.log(\"call-------------------------------\");\n            }\n\n            // if (filtered.length >= 3) {\n            //   setSearchFts(filtered);\n            // }\n            // let top3 = searchFts.slice(-3);\n            // console.log(top3);\n\n            console.log(searchFts);\n          });\n        });\n      });\n  }, [searchTerm]);\n\n  let html = [];\n\n  for (let track of searchFts) {\n    const ret = (\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={track.img} alt={\"Song Cover for\" + track.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">{track.name}</div>\n          <div class=\"songArtist\">{track.artists}</div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Energy: \"}</div>\n            <div class=\"stat\">{track.energy}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Loudness: \"}</div>\n            <div class=\"stat\">{track.loudness}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Happiness: \"}</div>\n            <div class=\"stat\">{track.valence}</div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    );\n    html.push(ret);\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            spotify uncovered\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={handleChange}\n              value={searchTerm}\n              //onChange={(value) => this.getSearchResults(value.target.value)}\n              //onSearch={(value) => console.log(value)}\n              //onRequestSearch={searchTracksFunction(search)}\n            />\n          </Search>\n        </Toolbar>\n      </AppBar>\n      <div className=\"searchResultsContainer\">\n        <div class=\"topResults\">{html}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useEffect, useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { TrackAnalysis, UserTracks } from \"react-spotify-api\";\nimport \"./dashboard.css\";\nimport Card from \"./Card.js\";\nimport BasicTable from \"./BasicTable.js\";\nimport StatGauge from \"./StatGauge\";\nimport CardList from \"./CardList\";\n//import { Input, List, Avatar } from \"antd\";\nimport SearchBar from \"./SearchBar.js\";\n\n//=======================================================================\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nfunction Dashboard({ props }) {\n  const spotify = props.spotify;\n  const [tracks, setTracks] = useState([]);\n\n  //FUNCTION CREATION HERE===============================================\n  // valence: float 0-1\n  // loudness: float 0-60 DB\n  // energy: float 0-1\n  //https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features\n\n  function intForZeroToOne(metric) {\n    return Math.round(metric * 100);\n  }\n\n  function decibalToAudioIntensity(metric) {\n    // let audioIntensity = 10 ** ((metric * -1) / 10 - 12);\n    return 10 ** ((metric * -1) / 10 - 12);\n  }\n  function intForLoudness(metric) {\n    let temp = 10 * (decibalToAudioIntensity(metric) * 10 ** 12);\n    //scaling it to 1-14\n    temp = Math.round((temp / 14) * 10);\n\n    if (temp >= 100) {\n      temp = 100;\n    }\n\n    return temp;\n  }\n\n  useEffect(() => {\n    let trackList = [];\n    spotify.getMyTopTracks().then(\n      (tracks) => {\n        let trackFts = tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((results) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: results.energy,\n              loudness: results.loudness,\n              acousticness: results.acousticness,\n              valence: results.valence,\n              dancibility: results.dancibility,\n              instrumentalness: results.instrumentalness,\n              img: track.album.images[0].url,\n            };\n\n            setTracks((tracks) => [...tracks, temp]);\n          });\n        });\n      },\n      (err) => {\n        console.log(\"Error:\", err);\n      }\n    );\n  }, []);\n\n  //create an item then map it to a card in typescript\n  const trackInfo = [];\n  const divRowsFor20MostListened = [];\n  //variables for 1-10 metric transformation===================================\n  let transformedEnergy = 0;\n  let transformedValence = 0;\n  let transformedLoudness = 0;\n\n  for (let item of tracks) {\n    //FUNCTION FOR TRANSFORMING METRICS FOR CARDS HERE=============================\n    transformedEnergy = intForZeroToOne(item.energy);\n    transformedValence = intForZeroToOne(item.valence);\n    transformedLoudness = intForLoudness(item.loudness);\n    const row = (\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={item.img} alt={\"Song Cover for\" + item.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">{item.name}</div>\n          <div class=\"songArtist\">{item.artists}</div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Energy: \"}</div>\n            <div class=\"stat\">{transformedEnergy}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Loudness: \"}</div>\n            <div class=\"stat\">{transformedLoudness}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Happiness: \"}</div>\n            <div class=\"stat\">{transformedValence}</div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    );\n    divRowsFor20MostListened.push(row);\n\n    //FUNCTION FOR FINDING METRIC AVGS=============================\n    //below probably goes inside function\n    let trackInfoTemp = {\n      name: item.name,\n      artists: item.artists,\n      energy: transformedEnergy,\n      loudness: transformedLoudness,\n      valence: transformedValence,\n      img: item.img,\n    };\n    trackInfo.push(trackInfoTemp);\n  }\n\n  return (\n    <div className=\"dashboard_container\">\n      <Box sx={{ flexGrow: 1 }}>\n        <SearchBar props={props} />\n      </Box>\n      <StatGauge props={trackInfo} />\n      <div class=\"top20Table\">{divRowsFor20MostListened}</div>\n      {/* <BasicTable props={trackInfo} /> */}\n      {/* <CardList /> */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import \"./App.css\";\nimport Login from \"./Login.js\";\nimport Dashboard from \"./Dashboard.js\";\n// import React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify.js\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport * as React from \"react\";\n\nimport { createTheme } from \"@mui/material/styles\";\nimport { ThemeProvider } from \"@emotion/react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#DF7C52\",\n      main: \"#d85c27\",\n      dark: \"#97401B\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#587CA5\",\n      main: \"#2f5c8f\",\n      dark: \"#204064\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  //This function sets the access token and gets the user with the access code given from the spotify api\n  React.useEffect(() => {\n    //code...\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n\n      spotify.setAccessToken(_token);\n      //grabbing the user\n      spotify.getMe().then((user) => {\n        setUser(user);\n      });\n    }\n  }, []);\n\n  let props = {\n    spotify: spotify,\n    token: token,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {token ? <Dashboard props={props} /> : <Login />}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
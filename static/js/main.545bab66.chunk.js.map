{"version":3,"sources":["spotify.js","Login.js","SongCard.js","Phrases.js","StatGauge.js","CardList.js","SearchBar.js","Dashboard.js","App.js","index.js"],"names":["authEndpoint","scopes","getTokenFromResponse","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","deployedLoginUrl","concat","join","loginUrl","Login","react_default","a","createElement","className","src","alt","Button","variant","href","color","theme","createTheme","responsiveFontSizes","SongCard","_ref","trackInfo","ThemeProvider","class","img","name","Typography","artists","energy","loudness","valence","Phrases","props","_useState","useState","_useState2","Object","slicedToArray","phrase","setPhrase","e","v","l","isLow","value","isLowMed","isMed","isMedHigh","isHigh","onClick","StatGauge","avgForMetrics","metrics","Math","round","b","length","_step","allEnergies","allValences","allLoudnesses","_iterator","_createForOfIteratorHelper","s","n","done","track","push","err","f","energyAvg","valenceAvg","loudnessAvg","phraseProps","index_esm","text","background","backgroundPadding","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","backgroundColor","textColor","pathColor","trailColor","src_Phrases","CardList","Search","styled","defineProperty","position","borderRadius","shape","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","transition","transitions","create","&:focus","SearchBar","_ref5","searchTerm","setSearchTerm","_useState3","_useState4","searchFts","setSearchFts","_useState5","_useState6","spotify","useEffect","searchTracks","limit","offset","then","results","tracks","items","map","getAudioFeaturesForTrack","id","info","temp","album","images","url","ids","filtered","filter","_ref6","index","includes","toConsumableArray","slice","console","log","html","SearchBar_createForOfIteratorHelper","ret","AppBar","Toolbar","noWrap","component","sx","flexGrow","xs","sm","SearchBar_Search","Search_default","placeholder","inputProps","aria-label","onChange","event","target","Dashboard","setTracks","intForZeroToOne","metric","intForLoudness","pow","decibalToAudioIntensity","getMyTopTracks","acousticness","dancibility","instrumentalness","transformedEnergy","transformedValence","transformedLoudness","Dashboard_createForOfIteratorHelper","trackInfoTemp","src_SearchBar","src_StatGauge","Box","Stack","src_SongCard","primary","light","main","dark","contrastText","secondary","SpotifyWebApi","App","_React$useState","React","_React$useState2","token","setToken","_React$useState3","_React$useState4","setUser","_token","access_token","setAccessToken","getMe","user","react","emotion_element_cbed451f_browser_esm","src_Dashboard","src_Login","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.545bab66.chunk.js","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId_test = \"c4cbffae207c414eb633445b69de2543\";\nconst clientId_deployed = \"9d0dc9720d7a4dca8f0eeb7a146bb258\";\nconst redirectUri_test = \"http://localhost:3000/\";\nconst redirectUri_deployed =\n  \"https://brendanpotter00.github.io/Spotify_Uncovered_v2/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromResponse = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\nexport const deployedLoginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_deployed}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_test}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport { loginUrl } from \"./spotify\";\nimport { deployedLoginUrl } from \"./spotify\";\nimport \"./login.css\";\nimport Button from \"@mui/material/Button\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\n        alt=\"Spotify Logo\"\n      />\n      {/* <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/> */}\n\n      <Button variant=\"contained\" href={deployedLoginUrl} color=\"primary\">\n        login with spotify\n      </Button>\n      {/* <a href={deployedLoginUrl}>login with spotify</a> */}\n\n      <button className=\"spotify-button\">\n        <a href={loginUrl}>Login for testing</a>\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./songCard.css\";\nimport {\n  createTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\n\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nfunction SongCard({ trackInfo }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={trackInfo.img} alt={\"Song Cover for\" + trackInfo.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">\n            <Typography variant=\"h4\">{trackInfo.name}</Typography>\n          </div>\n          <div class=\"songArtist\">\n            <Typography variant=\"h5\">{trackInfo.artists}</Typography>\n          </div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography variant=\"h5\">{\"Energy: \"}</Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography variant=\"h5\">{trackInfo.energy}</Typography>\n            </div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography variant=\"h5\">{\"Loudness: \"}</Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography variant=\"h5\">{trackInfo.loudness}</Typography>\n            </div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography variant=\"h5\">{\"Happiness: \"}</Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography variant=\"h5\">{trackInfo.valence}</Typography>\n            </div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default SongCard;\n","import React, { useEffect, useState, Component } from \"react\";\nimport \"./phrases.css\";\n\nfunction Phrases({ props }) {\n  const [phrase, setPhrase] = useState(false);\n  let e = props.energy;\n  let v = props.valence;\n  let l = props.loudness;\n\n  function isLow(value) {\n    return value <= 25;\n  }\n\n  function isLowMed(value) {\n    return value <= 40 && value > 25;\n  }\n\n  function isMed(value) {\n    return value <= 55 && value > 40;\n  }\n\n  function isMedHigh(value) {\n    return value <= 70 && value > 55;\n  }\n\n  function isHigh(value) {\n    return value > 70;\n  }\n\n  function determinePhrase() {\n    if (isLowMed(v) && isMed(e) && isLowMed(l))\n      return \"Feeling kinda meh, huh? It's okay we've all been there\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(l) || isLowMed(l) || isMed(l)) &&\n      (isMedHigh(v) || isHigh(v))\n    )\n      return \"I think you could stand to spice it up a bit. Not EVERY song needs to be a slow song\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(v) || isHigh(v)) &&\n      (isLow(l) || isLowMed(l) || isMed(l))\n    )\n      return \"Aww you're happy AND energetic?? That's so nice... I guess :)\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(l) || isHigh(l)) &&\n      (isLow(v) || isLowMed(v) || isMed(v))\n    )\n      return \"Have you heard of 'chill'? You could use it\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(v) || isLowMed(v) || isMed(v)) &&\n      (isMedHigh(l) || isHigh(l))\n    )\n      return \"You seem like you could use a pick me up. Grab a coffee and go for a walk\";\n    if ((isMedHigh(v) || isHigh(v)) && (isMed(e) || isMedHigh(e) || isHigh(e)))\n      return \"Your music suggests you are doing great. Way to embrace 'fake it till you make it'\";\n    if (isMed(v) && isMed(l) && isMed(e))\n      return \"Nothin wrong with floating in the middle\";\n    if (\n      ((isMed(v) || isMedHigh(v)) && isMed(l) && isMed(e)) ||\n      ((isMed(l) || isMedHigh(l)) && isMed(v) && isMed(e)) ||\n      ((isMed(e) || isMedHigh(e)) && isMed(l) && isMed(v))\n    )\n      return \"Congrats! You're just barely not basic :)\";\n    if (isMed(l) && isMed(e)) return \"Ahhh so you're the mellow type\";\n    if (isHigh(e))\n      return \"Maybe you should lay off the caffeine for a bit, just a suggestion\";\n    if (isHigh(l)) return \"Wow... that's really loud. Maybe take a break?\";\n    if (isLow(v) || isLowMed(v))\n      return \"You seem a bit sad, might I suggest Spotify's 'Mood Booster' playlist\";\n    else return \"I like your tunes!\";\n  }\n\n  const handleChange = () => {\n    setPhrase(true);\n  };\n  //CodePen for Phrase button\n  //https://codepen.io/chancesq/pen/MWKREVg?editors=1100\n\n  return (\n    <div className=\"phrase-container\">\n      {/* <div className=\"phrase\">{determinePhrase()}</div> */}\n\n      {phrase ? (\n        <div className=\"phrase\">{determinePhrase()}</div>\n      ) : (\n        <button className=\"phraseButton\" onClick={() => handleChange()}>\n          analyze\n        </button>\n      )}\n      {/* {token ? <Dashboard props={props} /> : <Login />} */}\n    </div>\n  );\n}\n\nexport default Phrases;\n","import React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport { buildStyles } from \"react-circular-progressbar\";\nimport \"./statGauge.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Phrases from \"./Phrases\";\n\nconst percentage = 66;\nfunction StatGauge({ props }) {\n  function avgForMetrics(metrics) {\n    return Math.round(metrics.reduce((a, b) => a + b, 0) / metrics.length);\n  }\n\n  //getting all energies, loudnesses, and valences in arrays\n  let allEnergies = [];\n  let allValences = [];\n  let allLoudnesses = [];\n  for (let track of props) {\n    allEnergies.push(track.energy);\n    allValences.push(track.valence);\n    allLoudnesses.push(track.loudness);\n  }\n\n  //getting avgerages of all metrics to place in the bars\n  let energyAvg = avgForMetrics(allEnergies);\n  let valenceAvg = avgForMetrics(allValences);\n  let loudnessAvg = avgForMetrics(allLoudnesses);\n\n  let phraseProps = {\n    energy: energyAvg,\n    valence: valenceAvg,\n    loudness: loudnessAvg\n  }\n\n  return (\n    <div>\n      <div className=\"bars\">\n        <div className=\"firstbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={energyAvg}\n            text={`${energyAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FDA766\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <h3> Energy </h3>\n        </div>\n        <div className=\"secondbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={valenceAvg}\n            text={`${valenceAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD9346\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n\n          <h3> Happiness </h3>\n        </div>\n        <div className=\"thirdbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={loudnessAvg}\n            text={`${loudnessAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD7F2C\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <h3> Loudness </h3>\n        </div>\n      </div>\n      <Phrases props={phraseProps} />\n    </div>\n  );\n}\n\nexport default StatGauge;\n","import React from \"react\";\nimport Card from \"./SongCard.js\";\n\nimport \"./cardList.css\";\n\nfunction CardList() {\n  return (\n    <div className=\"card-container\">\n      <Card />\n    </div>\n  );\n}\n\nexport default CardList;\n","import React, { useEffect, useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { TrackAnalysis, UserTracks } from \"react-spotify-api\";\nimport \"./dashboard.css\";\n\nimport BasicTable from \"./BasicTable.js\";\nimport StatGauge from \"./StatGauge\";\nimport CardList from \"./CardList\";\n//import { Input, List, Avatar } from \"antd\";\n\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nfunction SearchBar({ props }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchFts, setSearchFts] = useState([]);\n  const [top, setTop] = useState([]);\n\n  const spotify = props.spotify;\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    setSearchFts([]);\n\n    const searchResults = spotify\n      .searchTracks(searchTerm, { limit: 3, offset: 1 })\n      .then((results) => {\n        let resultFts = results.tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((info) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: info.energy,\n              loudness: info.loudness,\n              valence: info.valence,\n              img: track.album.images[0].url,\n            };\n            let ids = searchFts.map((track) => track.id);\n            let names = searchFts.map((track) => track.name);\n            let filtered = searchFts.filter(\n              ({ id }, index) => !ids.includes(id, index + 1)\n            );\n            setSearchFts((searchFts) => [...searchFts, temp]);\n\n            // if (!ids.includes(temp.id)) {\n            //   setSearchFts((searchFts) => [...searchFts, temp]);\n            // }\n\n            if (filtered.length >= 8) {\n              // setSearchFts(top3);\n              let top3 = filtered.slice(-3);\n              let total = searchFts;\n              //setSearchFts(total.slice(-3));\n              //console.log(\"INSIDE \" + searchFts.map((t) => t.name));\n\n              console.log(\"call-------------------------------\");\n            }\n\n            // if (filtered.length >= 3) {\n            //   setSearchFts(filtered);\n            // }\n            // let top3 = searchFts.slice(-3);\n            // console.log(top3);\n\n            console.log(searchFts);\n          });\n        });\n      });\n  }, [searchTerm]);\n\n  let html = [];\n\n  for (let track of searchFts) {\n    const ret = (\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={track.img} alt={\"Song Cover for\" + track.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">{track.name}</div>\n          <div class=\"songArtist\">{track.artists}</div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Energy: \"}</div>\n            <div class=\"stat\">{track.energy}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Loudness: \"}</div>\n            <div class=\"stat\">{track.loudness}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Happiness: \"}</div>\n            <div class=\"stat\">{track.valence}</div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    );\n    html.push(ret);\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            spotify uncovered\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={handleChange}\n              value={searchTerm}\n              //onChange={(value) => this.getSearchResults(value.target.value)}\n              //onSearch={(value) => console.log(value)}\n              //onRequestSearch={searchTracksFunction(search)}\n            />\n          </Search>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"searchResultsContainer\">\n        <div class=\"topResults\">{html}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useEffect, useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { TrackAnalysis, UserTracks } from \"react-spotify-api\";\nimport \"./dashboard.css\";\nimport SongCard from \"./SongCard.js\";\n\nimport StatGauge from \"./StatGauge\";\n\nimport CardList from \"./CardList\";\n//import { Input, List, Avatar } from \"antd\";\nimport SearchBar from \"./SearchBar.js\";\n\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Stack from \"@mui/material/Stack\";\n\nfunction Dashboard({ props }) {\n  const spotify = props.spotify;\n  const [tracks, setTracks] = useState([]);\n\n  //FUNCTION CREATION HERE===============================================\n  // valence: float 0-1\n  // loudness: float 0-60 DB\n  // energy: float 0-1\n  //https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features\n\n  function intForZeroToOne(metric) {\n    return Math.round(metric * 100);\n  }\n\n  function decibalToAudioIntensity(metric) {\n    // let audioIntensity = 10 ** ((metric * -1) / 10 - 12);\n    return 10 ** ((metric * -1) / 10 - 12);\n  }\n  function intForLoudness(metric) {\n    let temp = 10 * (decibalToAudioIntensity(metric) * 10 ** 12);\n    //scaling it to 1-14\n    temp = Math.round((temp / 14) * 10);\n\n    if (temp >= 100) {\n      temp = 100;\n    }\n\n    return temp;\n  }\n\n  useEffect(() => {\n    let trackList = [];\n    spotify.getMyTopTracks().then(\n      (tracks) => {\n        let trackFts = tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((results) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: results.energy,\n              loudness: results.loudness,\n              acousticness: results.acousticness,\n              valence: results.valence,\n              dancibility: results.dancibility,\n              instrumentalness: results.instrumentalness,\n              img: track.album.images[0].url,\n            };\n\n            setTracks((tracks) => [...tracks, temp]);\n          });\n        });\n      },\n      (err) => {\n        console.log(\"Error:\", err);\n      }\n    );\n  }, []);\n\n  //create an item then map it to a card in typescript\n  const trackInfo = [];\n  const divRowsFor20MostListened = [];\n  //variables for 1-10 metric transformation===================================\n  let transformedEnergy = 0;\n  let transformedValence = 0;\n  let transformedLoudness = 0;\n  let allEnergies = [];\n  let allValences = [];\n\n  for (let item of tracks) {\n    //FUNCTION FOR TRANSFORMING METRICS FOR CARDS HERE=============================\n    transformedEnergy = intForZeroToOne(item.energy);\n    transformedValence = intForZeroToOne(item.valence);\n    transformedLoudness = intForLoudness(item.loudness);\n\n    // divRowsFor20MostListened.push(row);\n    allEnergies.push(transformedEnergy);\n    allValences.push(transformedValence);\n\n    //FUNCTION FOR FINDING METRIC AVGS=============================\n    //below probably goes inside function\n    let trackInfoTemp = {\n      name: item.name,\n      artists: item.artists,\n      energy: transformedEnergy,\n      loudness: transformedLoudness,\n      valence: transformedValence,\n      img: item.img,\n    };\n    trackInfo.push(trackInfoTemp);\n  }\n\n  return (\n    <div className=\"dashboard_container\">\n      <SearchBar props={props}></SearchBar>\n      <StatGauge props={trackInfo} />\n      <Box sx={{ width: \"100%\" }}>\n        <div class=\"top20Table\">\n          <Stack spacing={2}>\n            {trackInfo.map((track) => (\n              <SongCard trackInfo={track}></SongCard>\n            ))}\n          </Stack>\n        </div>\n      </Box>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import \"./App.css\";\nimport Login from \"./Login.js\";\nimport Dashboard from \"./Dashboard.js\";\n// import React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify.js\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport * as React from \"react\";\n\nimport { createTheme } from \"@mui/material/styles\";\nimport { ThemeProvider } from \"@emotion/react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#DF7C52\",\n      main: \"#d85c27\",\n      dark: \"#97401B\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#587CA5\",\n      main: \"#2f5c8f\",\n      dark: \"#204064\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  //This function sets the access token and gets the user with the access code given from the spotify api\n  React.useEffect(() => {\n    //code...\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n\n      spotify.setAccessToken(_token);\n      //grabbing the user\n      spotify.getMe().then((user) => {\n        setUser(user);\n      });\n    }\n  }, []);\n\n  let props = {\n    spotify: spotify,\n    token: token,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {token ? <Dashboard props={props} /> : <Login />}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
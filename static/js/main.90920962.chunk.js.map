{"version":3,"sources":["spotify.js","Login.js","SongCard.js","Phrases.js","StatGauge.js","SearchBar.js","Dashboard.js","App.js","index.js"],"names":["authEndpoint","scopes","getTokenFromResponse","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","deployedLoginUrl","concat","join","loginUrl","Login","react_default","a","createElement","className","src","alt","Button","variant","href","color","theme","createTheme","responsiveFontSizes","SongCard","_ref","trackInfo","ThemeProvider","class","img","name","Typography","artists","energy","danceability","valence","Phrases","props","_useState","useState","_useState2","Object","slicedToArray","phrase","setPhrase","e","v","l","loudness","isLow","value","isLowMed","isMed","isMedHigh","isHigh","onClick","StatGauge","avgForMetrics","metrics","Math","round","b","length","_step","allEnergies","allValences","allDancies","_iterator","_createForOfIteratorHelper","s","n","done","track","push","err","f","energyAvg","valenceAvg","danceAvg","phraseProps","index_esm","text","background","backgroundPadding","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","backgroundColor","textColor","pathColor","trailColor","src_Phrases","Search","styled","defineProperty","position","borderRadius","shape","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","transition","transitions","create","&:focus","calculateDance","tempo","happy","scale","abs","SearchBar","_ref5","searchTerm","setSearchTerm","_useState3","_useState4","searchFts","setSearchFts","debouncedSearchTerm","delay","_useState5","_useState6","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","spotify","handleChange","_ref6","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","target","stop","_x","apply","this","arguments","searchTracks","limit","offset","then","results","tracks","items","map","getAudioFeaturesForTrack","id","info","temp","album","images","url","toConsumableArray","html","SearchBar_createForOfIteratorHelper","ret","AppBar","Toolbar","noWrap","component","sx","flexGrow","xs","sm","SearchBar_Search","Search_default","placeholder","inputProps","aria-label","onChange","Dashboard","setTracks","intForZeroToOne","metric","getMyTopTracks","console","log","src_SearchBar","src_StatGauge","Box","Stack","src_SongCard","primary","light","main","dark","contrastText","secondary","SpotifyWebApi","App","_React$useState","React","_React$useState2","token","setToken","_React$useState3","_React$useState4","setUser","_token","access_token","setAccessToken","getMe","user","react","emotion_element_cbed451f_browser_esm","src_Dashboard","src_Login","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.90920962.chunk.js","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId_test = \"c4cbffae207c414eb633445b69de2543\";\nconst clientId_deployed = \"9d0dc9720d7a4dca8f0eeb7a146bb258\";\nconst redirectUri_test = \"http://localhost:3000/\";\nconst redirectUri_deployed =\n  \"https://brendanpotter00.github.io/Spotify_Uncovered_v2/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromResponse = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\nexport const deployedLoginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_deployed}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_test}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport { loginUrl } from \"./spotify\";\nimport { deployedLoginUrl } from \"./spotify\";\nimport \"./login.css\";\nimport Button from \"@mui/material/Button\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\n        alt=\"Spotify Logo\"\n      />\n      {/* <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/> */}\n\n      <Button variant=\"contained\" href={deployedLoginUrl} color=\"primary\">\n        login with spotify\n      </Button>\n      {/* <a href={deployedLoginUrl}>login with spotify</a> */}\n\n      <button className=\"spotify-button\">\n        <a href={loginUrl}>Login for testing</a>\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./songCard.css\";\nimport {\n  createTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\n\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nfunction SongCard({ trackInfo }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={trackInfo.img} alt={\"Song Cover for\" + trackInfo.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">\n            <Typography variant=\"h4\">{trackInfo.name}</Typography>\n          </div>\n          <div class=\"songArtist\">\n            <Typography variant=\"h5\">{trackInfo.artists}</Typography>\n          </div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography variant=\"h5\">{\"Energy: \"}</Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography variant=\"h5\">{trackInfo.energy}</Typography>\n            </div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography variant=\"h5\">{\"Danceability: \"}</Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography variant=\"h5\">{trackInfo.danceability}</Typography>\n            </div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography variant=\"h5\">{\"Happiness: \"}</Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography variant=\"h5\">{trackInfo.valence}</Typography>\n            </div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default SongCard;\n","import React, { useEffect, useState, Component } from \"react\";\nimport \"./phrases.css\";\n\nfunction Phrases({ props }) {\n  const [phrase, setPhrase] = useState(false);\n  let e = props.energy;\n  let v = props.valence;\n  let l = props.loudness;\n\n  function isLow(value) {\n    return value <= 25;\n  }\n\n  function isLowMed(value) {\n    return value <= 40 && value > 25;\n  }\n\n  function isMed(value) {\n    return value <= 55 && value > 40;\n  }\n\n  function isMedHigh(value) {\n    return value <= 70 && value > 55;\n  }\n\n  function isHigh(value) {\n    return value > 70;\n  }\n\n  function determinePhrase() {\n    if (isLowMed(v) && isMed(e) && isLowMed(l))\n      return \"Feeling kinda meh, huh? It's okay we've all been there\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(l) || isLowMed(l) || isMed(l)) &&\n      (isMedHigh(v) || isHigh(v))\n    )\n      return \"I think you could stand to spice it up a bit. Not EVERY song needs to be a slow song\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(v) || isHigh(v)) &&\n      (isLow(l) || isLowMed(l) || isMed(l))\n    )\n      return \"Aww you're happy AND energetic?? That's so nice :)\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(l) || isHigh(l)) &&\n      (isLow(v) || isLowMed(v) || isMed(v))\n    )\n      return \"Have you heard of 'chill'? You could use it\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(v) || isLowMed(v) || isMed(v)) &&\n      (isMedHigh(l) || isHigh(l))\n    )\n      return \"You seem like you could use a pick me up. Grab a coffee and go for a walk\";\n    if ((isMedHigh(v) || isHigh(v)) && (isMed(e) || isMedHigh(e) || isHigh(e)))\n      return \"Your music suggests you are doing great. Way to embrace 'fake it till you make it'\";\n    if (isMed(v) && isMed(l) && isMed(e))\n      return \"Nothin wrong with floating in the middle\";\n    if (\n      ((isMed(v) || isMedHigh(v)) && isMed(l) && isMed(e)) ||\n      ((isMed(l) || isMedHigh(l)) && isMed(v) && isMed(e)) ||\n      ((isMed(e) || isMedHigh(e)) && isMed(l) && isMed(v))\n    )\n      return \"Congrats! You're just barely not basic :)\";\n    if (isMed(l) && isMed(e)) return \"Ahhh so you're the mellow type\";\n    if (isHigh(e))\n      return \"Maybe you should lay off the caffeine for a bit, just a suggestion\";\n    if (isHigh(l)) return \"Wow... that's really loud. Maybe take a break?\";\n    if (isLow(v) || isLowMed(v))\n      return \"You seem a bit sad, might I suggest Spotify's 'Mood Booster' playlist\";\n    else return \"I like your tunes!\";\n  }\n\n  const handleChange = () => {\n    setPhrase(true);\n  };\n\n  //CodePen for Phrase button\n  //https://codepen.io/chancesq/pen/MWKREVg?editors=1100\n\n  return (\n    <div className=\"phrase-container\">\n      {/* <div className=\"phrase\">{determinePhrase()}</div> */}\n\n      {phrase ? (\n        <div className=\"phrase\">{determinePhrase()}</div>\n      ) : (\n        <button className=\"phraseButton\" onClick={() => handleChange()}>\n          click\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Phrases;\n","import React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport { buildStyles } from \"react-circular-progressbar\";\nimport \"./statGauge.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Phrases from \"./Phrases\";\n\nconst percentage = 66;\nfunction StatGauge({ props }) {\n  function avgForMetrics(metrics) {\n    return Math.round(metrics.reduce((a, b) => a + b, 0) / metrics.length);\n  }\n\n  //getting all energies, loudnesses, and valences in arrays\n  let allEnergies = [];\n  let allValences = [];\n  let allDancies = []\n  for (let track of props) {\n    allEnergies.push(track.energy);\n    allValences.push(track.valence);\n    allDancies.push(track.danceability)\n  }\n\n  //getting avgerages of all metrics to place in the bars\n  let energyAvg = avgForMetrics(allEnergies);\n  let valenceAvg = avgForMetrics(allValences);\n  let danceAvg = avgForMetrics(allDancies);\n\n  let phraseProps = {\n    energy: energyAvg,\n    valence: valenceAvg,\n    loudness: danceAvg\n  }\n\n  return (\n    <div>\n      <div className=\"bars\">\n        <div className=\"firstbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={energyAvg}\n            text={`${energyAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FDA766\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <h3> Energy </h3>\n        </div>\n        <div className=\"secondbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={valenceAvg}\n            text={`${valenceAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD9346\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n\n          <h3> Happiness </h3>\n        </div>\n        <div className=\"thirdbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={danceAvg}\n            text={`${danceAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD7F2C\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <h3> Danceability </h3>\n        </div>\n      </div>\n      <Phrases props={phraseProps} />\n    </div>\n  );\n}\n\nexport default StatGauge;\n","import React, { useEffect, useState, useRef, Component } from \"react\";\nimport \"./dashboard.css\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\nfunction calculateDance(tempo,energy,happy) \n{ \n  energy = Math.round(energy * 100);\n  happy = Math.round(happy * 100); \n  let diff =  Math.abs(130 - tempo); \n  let n =  (130 + tempo) / 2 ;\n  let percentDiff = (diff/n) * 100; \n\n  let scale = ((100) - (percentDiff )) * (100 - 1) / ((100)- 1) + 1 ;  \n  return Math.round(((1.1*energy) + ( .75 * scale) +(.90 * happy)) / 2.75); \n\n}\n\nfunction SearchBar({ props }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchFts, setSearchFts] = useState([]);\n  const debouncedSearchTerm = useDebounce(searchTerm, 400);\n  const spotify = props.spotify;\n\n  const handleChange = async (event) => {\n    await setSearchTerm(event.target.value);\n  };\n\n  function useDebounce(value, delay) {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }\n\n  useEffect(() => {\n    setSearchFts([]);\n    const searchResults = spotify\n      .searchTracks(searchTerm, { limit: 3, offset: 0 })\n      .then((results) => {\n        let resultFts = results.tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((info) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: info.energy,\n              valence: info.valence,\n              danceability: calculateDance(info.tempo, info.energy,info.valence), \n              img: track.album.images[0].url,\n            };\n            setSearchFts((searchFts) => [...searchFts, temp]);\n          });\n        });\n      });\n  }, [debouncedSearchTerm]);\n\n  let html = [];\n\n  for (let track of searchFts) {\n    const ret = (\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={track.img} alt={\"Song Cover for\" + track.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">{track.name}</div>\n          <div class=\"songArtist\">{track.artists}</div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Energy: \"}</div>\n            <div class=\"stat\">{track.energy}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Dance: \"}</div>\n            <div class=\"stat\">{track.danceability}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Happiness: \"}</div>\n            <div class=\"stat\">{track.valence}</div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    );\n    html.push(ret);\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            spotify uncovered\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={handleChange}\n              value={searchTerm}\n              //onChange={(value) => this.getSearchResults(value.target.value)}\n              //onSearch={(value) => console.log(value)}\n              //onRequestSearch={searchTracksFunction(search)}\n            />\n          </Search>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"searchResultsContainer\">\n        <div class=\"topResults\">{html}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useEffect, useState, Component } from \"react\";\nimport \"./dashboard.css\";\nimport SongCard from \"./SongCard.js\";\nimport StatGauge from \"./StatGauge\";\nimport SearchBar from \"./SearchBar.js\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\n\nfunction Dashboard({ props }) {\n  const spotify = props.spotify;\n  const [tracks, setTracks] = useState([]);\n\n  //FUNCTION CREATION HERE===============================================\n  // valence: float 0-1\n  // loudness: float 0-60 DB\n  // energy: float 0-1\n  //https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features\n\n  function calculateDance(tempo,energy,happy) \n{ \n  energy = Math.round(energy * 100);\n  happy = Math.round(happy * 100); \n  let diff =  Math.abs(130 - tempo); \n  let n =  (130 + tempo) / 2 ;\n  let percentDiff = (diff/n) * 100; \n\n  let scale = ((100) - (percentDiff )) * (100 - 1) / ((100)- 1) + 1 ;  \n  return Math.round(((1.1*energy) + ( .75 * scale) +(.90 * happy)) / 2.75); \n\n}\n  function intForZeroToOne(metric) {\n    return Math.round(metric * 100);\n  }\n\n  useEffect(() => {\n    let trackList = [];\n    spotify.getMyTopTracks().then(\n      (tracks) => {\n        let trackFts = tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((results) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: intForZeroToOne(results.energy),\n              valence: intForZeroToOne(results.valence),\n              danceability: calculateDance(results.tempo, results.energy,results.valence), \n              img: track.album.images[0].url,\n            };\n            setTracks((tracks) => [...tracks, temp]);\n          });\n        });\n      },\n      (err) => {\n        console.log(\"Error:\", err);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"dashboard_container\">\n      <SearchBar props={props}></SearchBar>\n      <StatGauge props={tracks} />\n      <Box sx={{ width: \"100%\" }}>\n        <div class=\"top20Table\">\n          <Stack spacing={2}>\n            {tracks.map((track) => (\n              <SongCard trackInfo={track}></SongCard>\n            ))}\n          </Stack>\n        </div>\n      </Box>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import \"./App.css\";\nimport Login from \"./Login.js\";\nimport Dashboard from \"./Dashboard.js\";\n// import React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify.js\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport * as React from \"react\";\n\nimport { createTheme } from \"@mui/material/styles\";\nimport { ThemeProvider } from \"@emotion/react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#DF7C52\",\n      main: \"#d85c27\",\n      dark: \"#97401B\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#587CA5\",\n      main: \"#2f5c8f\",\n      dark: \"#204064\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  //This function sets the access token and gets the user with the access code given from the spotify api\n  React.useEffect(() => {\n    //code...\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n\n      spotify.setAccessToken(_token);\n      //grabbing the user\n      spotify.getMe().then((user) => {\n        setUser(user);\n      });\n    }\n  }, []);\n\n  let props = {\n    spotify: spotify,\n    token: token,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {token ? <Dashboard props={props} /> : <Login />}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
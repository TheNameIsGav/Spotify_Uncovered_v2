{"version":3,"sources":["spotify.js","Login.js","SongCard.js","Phrases.js","StatGauge.js","SearchBar.js","Dashboard.js","App.js","index.js"],"names":["authEndpoint","scopes","getTokenFromResponse","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","deployedLoginUrl","concat","join","loginUrl","Login","react_default","a","createElement","className","src","alt","Button","variant","href","color","theme","createTheme","responsiveFontSizes","SongCard","_ref","trackInfo","ThemeProvider","class","img","name","Typography","artists","energy","danceability","valence","Phrases","props","_useState","useState","_useState2","Object","slicedToArray","phrase","setPhrase","e","v","l","loudness","isLow","value","isLowMed","isMed","isMedHigh","isHigh","onClick","StatGauge","weightedAvgs","metrics","_weights$reduce","map","n","b","Math","abs","acc","w","i","_weights$reduce2","sum","weightSum","round","_step","allEnergies","allValences","allDancies","_iterator","_createForOfIteratorHelper","s","done","track","push","err","f","energyAvg","valenceAvg","danceAvg","phraseProps","index_esm","text","background","backgroundPadding","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","backgroundColor","textColor","pathColor","trailColor","src_Phrases","Search","styled","defineProperty","position","borderRadius","shape","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","transition","transitions","create","&:focus","SearchBar","_ref5","searchTerm","setSearchTerm","_useState3","_useState4","searchFts","setSearchFts","debouncedSearchTerm","delay","_useState5","_useState6","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","spotify","intForZeroToOne","metric","handleChange","_ref6","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","target","stop","_x","apply","this","arguments","searchTracks","limit","offset","then","results","tracks","items","getAudioFeaturesForTrack","id","info","temp","album","images","url","toConsumableArray","html","SearchBar_createForOfIteratorHelper","ret","AppBar","Toolbar","noWrap","component","sx","flexGrow","xs","sm","SearchBar_Search","Search_default","placeholder","inputProps","aria-label","onChange","Dashboard","setTracks","getMyTopTracks","console","log","src_SearchBar","src_StatGauge","Box","Stack","src_SongCard","primary","light","main","dark","contrastText","secondary","SpotifyWebApi","App","_React$useState","React","_React$useState2","token","setToken","_React$useState3","_React$useState4","setUser","_token","access_token","setAccessToken","getMe","user","react","emotion_element_cbed451f_browser_esm","src_Dashboard","src_Login","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"oWACaA,EAAe,yCAOtBC,EAAS,CACb,8BACA,4BACA,2BACA,gBACA,8BAGWC,EAAuB,WAClC,OAAOC,OAAOC,SAASC,KACpBC,UAAU,GACVC,MAAM,KACNC,OAAO,SAACC,EAASC,GAChB,IAAIC,EAAQD,EAAKH,MAAM,KAGvB,OAFAE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAEtCF,GACN,KAEMI,EAAgB,GAAAC,OAAMd,EAAN,eAAAc,OAxBP,mCAwBO,kBAAAA,OApB3B,0DAoB2B,WAAAA,OAA4Fb,EAAOc,KAC9H,OAD2B,yCAIhBC,EAAQ,GAAAF,OAAMd,EAAN,eAAAc,OA5BC,mCA4BD,kBAAAA,OA1BI,yBA0BJ,WAAAA,OAAwFb,EAAOc,KAClH,OADmB,0DCHNE,MArBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEE,IAAI,qFACJC,IAAI,iBAINL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAMb,EAAkBc,MAAM,WAA1D,sBAKAT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAChBH,EAAAC,EAAAC,cAAA,KAAGM,KAAMV,GAAT,iFCbJY,EAAQC,cACZD,EAAQE,YAAoBF,GAoDbG,MAlDf,SAAAC,GAAiC,IAAbC,EAAaD,EAAbC,UAClB,OACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAeN,MAAOA,GACpBV,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAAA,OAAKE,IAAKW,EAAUG,IAAKb,IAAK,iBAAmBU,EAAUI,QAE7DnB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAMQ,EAAUI,OAEtCnB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAMQ,EAAUM,WAIxCrB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,eACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,UACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAM,aAE5BP,EAAAC,EAAAC,cAAA,OAAKe,MAAM,QACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAMQ,EAAUO,UAIxCtB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,UACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAM,mBAE5BP,EAAAC,EAAAC,cAAA,OAAKe,MAAM,QACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAMQ,EAAUQ,gBAIxCvB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,UACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAM,gBAE5BP,EAAAC,EAAAC,cAAA,OAAKe,MAAM,QACTjB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYb,QAAQ,MAAMQ,EAAUS,yCC6CnCC,MA9Ff,SAAAX,GAA4B,IAATY,EAASZ,EAATY,MAASC,EACEC,oBAAS,GADXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBK,EADmBH,EAAA,GACXI,EADWJ,EAAA,GAEtBK,EAAIR,EAAMJ,OACVa,EAAIT,EAAMF,QACVY,EAAIV,EAAMW,SAEd,SAASC,EAAMC,GACb,OAAOA,GAAS,GAGlB,SAASC,EAASD,GAChB,OAAOA,GAAS,IAAMA,EAAQ,GAGhC,SAASE,EAAMF,GACb,OAAOA,GAAS,IAAMA,EAAQ,GAGhC,SAASG,EAAUH,GACjB,OAAOA,GAAS,IAAMA,EAAQ,GAGhC,SAASI,EAAOJ,GACd,OAAOA,EAAQ,GAwDjB,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAGZ6B,EACChC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAzDfqC,EAASL,IAAMM,EAAMP,IAAMM,EAASJ,GAC/B,0DAENE,EAAMJ,IAAMM,EAASN,MACrBI,EAAMF,IAAMI,EAASJ,IAAMK,EAAML,MACjCM,EAAUP,IAAMQ,EAAOR,IAEjB,wFAENO,EAAUR,IAAMS,EAAOT,MACvBQ,EAAUP,IAAMQ,EAAOR,MACvBG,EAAMF,IAAMI,EAASJ,IAAMK,EAAML,IAE3B,sDAENM,EAAUR,IAAMS,EAAOT,MACvBQ,EAAUN,IAAMO,EAAOP,MACvBE,EAAMH,IAAMK,EAASL,IAAMM,EAAMN,IAE3B,+CAENG,EAAMJ,IAAMM,EAASN,MACrBI,EAAMH,IAAMK,EAASL,IAAMM,EAAMN,MACjCO,EAAUN,IAAMO,EAAOP,IAEjB,6EACJM,EAAUP,IAAMQ,EAAOR,MAAQM,EAAMP,IAAMQ,EAAUR,IAAMS,EAAOT,IAC9D,qFACLO,EAAMN,IAAMM,EAAML,IAAMK,EAAMP,GACzB,4CAELO,EAAMN,IAAMO,EAAUP,KAAOM,EAAML,IAAMK,EAAMP,KAC/CO,EAAML,IAAMM,EAAUN,KAAOK,EAAMN,IAAMM,EAAMP,KAC/CO,EAAMP,IAAMQ,EAAUR,KAAOO,EAAML,IAAMK,EAAMN,GAE1C,4CACLM,EAAML,IAAMK,EAAMP,GAAW,iCAC7BS,EAAOT,GACF,qEACLS,EAAOP,GAAW,iDAClBE,EAAMH,IAAMK,EAASL,GAChB,wEACG,sBAiBRnC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeyC,QAAS,WAb9CX,GAAU,KAaN,kiCCgCOY,MAjHf,SAAA/B,GAQE,SAASgC,EAAaC,GACpB,IAD6BC,EACfD,EAAQE,IAAI,SAACC,GAAD,OAPDjD,EAO0B,GAPvBkD,EAO2BD,EANhDE,KAAKC,IAAIpD,EAAIkD,KAAOlD,EAAIkD,GAAK,GADtC,IAA2BlD,EAAGkD,IAQK7D,OAC/B,SAACgE,EAAKC,EAAGC,GAGP,OAFAF,EAAI,GAAKA,EAAI,GAAKP,EAAQS,GAAKD,EAC/BD,EAAI,GAAKA,EAAI,GAAKC,EACXD,GAET,CAAC,EAAG,IARuBG,EAAA3B,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAEtBU,EAFsBD,EAAA,GAEjBE,EAFiBF,EAAA,GAU7B,OAAOL,KAAKQ,MAAMF,EAAMC,GAI1B,IAtB4BE,EAsBxBC,EAAc,GACdC,EAAc,GACdC,EAAa,GAxBWC,EAAAC,EAAApD,EAATY,OAAS,IAyB5B,IAAAuC,EAAAE,MAAAN,EAAAI,EAAAf,KAAAkB,MAAyB,KAAhBC,EAAgBR,EAAAtB,MACvBuB,EAAYQ,KAAKD,EAAM/C,QACvByC,EAAYO,KAAKD,EAAM7C,SACvBwC,EAAWM,KAAKD,EAAM9C,eA5BI,MAAAgD,GAAAN,EAAA/B,EAAAqC,GAAA,QAAAN,EAAAO,IAgC5B,IAAIC,EAAY3B,EAAagB,GACzBY,EAAa5B,EAAaiB,GAC1BY,EAAW7B,EAAakB,GAGxBY,EAAc,CAChBtD,OAAQmD,EACRjD,QAASkD,EACTrC,SAAUsC,GAGZ,OACE3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACE1E,UAAU,YACVoC,MAAOkC,EACPK,KAAI,GAAAlF,OAAK6E,GACTM,YAAU,EACVC,kBAAmB,EACnBC,OAAQC,YAAY,CAClBC,SAAU,EACVC,cAAe,QACfC,SAAU,SACVC,uBAAwB,GACxBC,gBAAiB,UACjBC,UAAW,OACXC,UAAW,OACXC,WAAY,kBAGhB1F,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACE1E,UAAU,YACVoC,MAAOmC,EACPI,KAAI,GAAAlF,OAAK8E,GACTK,YAAU,EACVC,kBAAmB,EACnBC,OAAQC,YAAY,CAClBC,SAAU,EACVC,cAAe,QACfC,SAAU,SACVC,uBAAwB,GACxBC,gBAAiB,UACjBC,UAAW,OACXC,UAAW,OACXC,WAAY,kBAIhB1F,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACE1E,UAAU,YACVoC,MAAOoC,EACPG,KAAI,GAAAlF,OAAK+E,GACTI,YAAU,EACVC,kBAAmB,EACnBC,OAAQC,YAAY,CAClBC,SAAU,EACVC,cAAe,QACfC,SAAU,SACVC,uBAAwB,GACxBC,gBAAiB,UACjBC,UAAW,OACXC,UAAW,OACXC,WAAY,kBAGhB1F,EAAAC,EAAAC,cAAA,8BAGJF,EAAAC,EAAAC,cAACyF,EAAD,CAASjE,MAAOkD,ynCC3GtB,IAAMgB,EAASC,YAAO,MAAPA,CAAc,SAAA/E,GAAA,IAAGJ,EAAHI,EAAGJ,MAAH,OAAAoB,OAAAgE,EAAA,EAAAhE,CAAA,CAC3BiE,SAAU,WACVC,aAActF,EAAMuF,MAAMD,aAC1BT,gBAAiBW,YAAMxF,EAAMyF,QAAQC,OAAOC,MAAO,KACnDC,UAAW,CACTf,gBAAiBW,YAAMxF,EAAMyF,QAAQC,OAAOC,MAAO,MAErDE,WAAY,EACZC,MAAO,QACN9F,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BH,WAAY7F,EAAMiG,QAAQ,GAC1BH,MAAO,WAILI,EAAoBf,YAAO,MAAPA,CAAc,SAAAgB,GAAA,MAAgB,CACtDC,QADsCD,EAAGnG,MAC1BiG,QAAQ,EAAG,GAC1BI,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,YAGZC,EAAkBvB,YAAOwB,IAAPxB,CAAkB,SAAAyB,GAAA,IAAG5G,EAAH4G,EAAG5G,MAAH,MAAgB,CACxDD,MAAO,UACP8G,wBAAwBzF,OAAAgE,EAAA,EAAAhE,CAAA,CACtBgF,QAASpG,EAAMiG,QAAQ,EAAG,EAAG,EAAG,GAEhCa,YAAW,cAAA5H,OAAgBc,EAAMiG,QAAQ,GAA9B,KACXc,WAAY/G,EAAMgH,YAAYC,OAAO,SACrCnB,MAAO,QACN9F,EAAM+F,YAAYC,GAAG,MAAQ,CAC5BF,MAAO,OACPoB,UAAW,CACTpB,MAAO,aAyIAqB,MAnIf,SAAAC,GAA8B,IAATpG,EAASoG,EAATpG,MAASC,EACQC,mBAAS,IADjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrBoG,EADqBlG,EAAA,GACTmG,EADSnG,EAAA,GAAAoG,EAEMrG,mBAAS,IAFfsG,EAAApG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAErBE,EAFqBD,EAAA,GAEVE,EAFUF,EAAA,GAGtBG,EAYN,SAAqB9F,EAAO+F,GAAO,IAAAC,EAEW3G,mBAASW,GAFpBiG,EAAA1G,OAAAC,EAAA,EAAAD,CAAAyG,EAAA,GAE1BE,EAF0BD,EAAA,GAEVE,EAFUF,EAAA,GAkBjC,OAfAG,oBACE,WAEE,IAAMC,EAAUC,WAAW,WACzBH,EAAkBnG,IACjB+F,GAIH,OAAO,WACLQ,aAAaF,KAGjB,CAACrG,EAAO+F,IAEHG,EA9BmBM,CAAYhB,EAAY,KAC9CiB,EAAUtH,EAAMsH,QAEtB,SAASC,EAAgBC,GACvB,OAAO9F,KAAKQ,MAAe,IAATsF,GAGpB,IAAMC,EAAY,eAAAC,EAAAtH,OAAAuH,EAAA,EAAAvH,CAAAwH,EAAArJ,EAAAsJ,KAAG,SAAAC,EAAOC,GAAP,OAAAH,EAAArJ,EAAAyJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACb7B,EAAcyB,EAAMK,OAAOvH,OADd,wBAAAoH,EAAAI,SAAAP,MAAH,gBAAAQ,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,GA4BlBxB,oBAAU,WACRP,EAAa,IACSY,EACnBoB,aAAarC,EAAY,CAAEsC,MAAO,EAAGC,OAAQ,IAC7CC,KAAK,SAACC,GACWA,EAAQC,OAAOC,MAAMzH,IAAI,SAACoB,GACxC2E,EAAQ2B,yBAAyBtG,EAAMuG,IAAIL,KAAK,SAACM,GAC/C,IAAIC,EAAO,CACTF,GAAIvG,EAAMuG,GACVzJ,KAAMkD,EAAMlD,KACZE,QAASgD,EAAMhD,QAAQ,GAAGF,KAC1BG,OAAQ2H,EAAgB4B,EAAKvJ,QAC7BE,QAASyH,EAAgB4B,EAAKrJ,SAC9BD,aAAc0H,EAAgB4B,EAAKtJ,cACnCL,IAAKmD,EAAM0G,MAAMC,OAAO,GAAGC,KAE7B7C,EAAa,SAACD,GAAD,SAAAvI,OAAAkC,OAAAoJ,EAAA,EAAApJ,CAAmBqG,GAAnB,CAA8B2C,aAIlD,CAACzC,IAEJ,IA5D4BxE,EA4DxBsH,EAAO,GA5DiBlH,EAAAmH,EA8DVjD,GA9DU,IA8D5B,IAAAlE,EAAAE,MAAAN,EAAAI,EAAAf,KAAAkB,MAA6B,KAApBC,EAAoBR,EAAAtB,MACrB8I,EACJrL,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAAA,OAAKE,IAAKiE,EAAMnD,IAAKb,IAAK,iBAAmBgE,EAAMlD,QAErDnB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,YAAYoD,EAAMlD,MAC7BnB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cAAcoD,EAAMhD,UAGjCrB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,eACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,UACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cAAc,YACzBjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,QAAQoD,EAAM/C,SAG3BtB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,UACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cAAc,WACzBjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,QAAQoD,EAAM9C,eAG3BvB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,UACTjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cAAc,eACzBjB,EAAAC,EAAAC,cAAA,OAAKe,MAAM,QAAQoD,EAAM7C,YAMjC2J,EAAK7G,KAAK+G,IA5FgB,MAAA9G,GAAAN,EAAA/B,EAAAqC,GAAA,QAAAN,EAAAO,IA+F5B,OACExE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAQvF,SAAS,UACf/F,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEb,QAAQ,KACRiL,QAAM,EACNC,UAAU,MACVC,GAAI,CAAEC,SAAU,EAAG1E,QAAS,CAAE2E,GAAI,OAAQC,GAAI,WAJhD,qBAQA7L,EAAAC,EAAAC,cAAC4L,EAAD,KACE9L,EAAAC,EAAAC,cAAC0G,EAAD,KACE5G,EAAAC,EAAAC,cAAC6L,EAAA9L,EAAD,OAEFD,EAAAC,EAAAC,cAACkH,EAAD,CACE4E,YAAY,eACZC,WAAY,CAAEC,aAAc,UAC5BC,SAAUhD,EACV5G,MAAOwF,OASf/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cAAckK,wBC7GlBiB,MA3Df,SAAAtL,GAA8B,IAATY,EAASZ,EAATY,MACbsH,EAAUtH,EAAMsH,QADMrH,EAEAC,mBAAS,IAFTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAErB8I,EAFqB5I,EAAA,GAEbwK,EAFaxK,EAAA,GAU5B,SAASoH,EAAgBC,GACvB,OAAO9F,KAAKQ,MAAe,IAATsF,GA+BpB,OAzBAP,oBAAU,WAERK,EAAQsD,iBAAiB/B,KACvB,SAACE,GACgBA,EAAOC,MAAMzH,IAAI,SAACoB,GAC/B2E,EAAQ2B,yBAAyBtG,EAAMuG,IAAIL,KAAK,SAACC,GAC/C,IAAIM,EAAO,CACTF,GAAIvG,EAAMuG,GACVzJ,KAAMkD,EAAMlD,KACZE,QAASgD,EAAMhD,QAAQ,GAAGF,KAC1BG,OAAQ2H,EAAgBuB,EAAQlJ,QAChCE,QAASyH,EAAgBuB,EAAQhJ,SACjCD,aAAc0H,EAAgBuB,EAAQjJ,cACtCL,IAAKmD,EAAM0G,MAAMC,OAAO,GAAGC,KAE7BoB,EAAU,SAAC5B,GAAD,SAAA7K,OAAAkC,OAAAoJ,EAAA,EAAApJ,CAAgB2I,GAAhB,CAAwBK,WAIxC,SAACvG,GACCgI,QAAQC,IAAI,SAAUjI,MAGzB,IAGDvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACuM,EAAD,CAAW/K,MAAOA,IAClB1B,EAAAC,EAAAC,cAACwM,EAAD,CAAWhL,MAAO+I,IAClBzK,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAKjB,GAAI,CAAElF,MAAO,SAChBxG,EAAAC,EAAAC,cAAA,OAAKe,MAAM,cACTjB,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOjG,QAAS,GACb8D,EAAOxH,IAAI,SAACoB,GAAD,OACVrE,EAAAC,EAAAC,cAAC2M,EAAD,CAAU9L,UAAWsD,mBC9C7B3D,EAAQC,YAAY,CACxBwF,QAAS,CACP2G,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKdlE,EAAU,IAAIoE,IAsCLC,MApCf,WAAe,IAAAC,EACaC,WAAe,MAD5BC,EAAA1L,OAAAC,EAAA,EAAAD,CAAAwL,EAAA,GACNG,EADMD,EAAA,GACCE,EADDF,EAAA,GAAAG,EAEWJ,WAAe,MAF1BK,EAAA9L,OAAAC,EAAA,EAAAD,CAAA6L,EAAA,GAEAE,GAFAD,EAAA,GAAAA,EAAA,IAKbL,YAAgB,WAEd,IAAMpO,EAAOH,IACbC,OAAOC,SAASC,KAAO,GACvB,IAAM2O,EAAS3O,EAAK4O,aAEhBD,IACFJ,EAASI,GAET9E,EAAQgF,eAAeF,GAEvB9E,EAAQiF,QAAQ1D,KAAK,SAAC2D,GACpBL,EAAQK,OAGX,IAEH,IAAIxM,EAAQ,CACVsH,QAASA,EACTyE,MAAOA,GAGT,OACEU,EAAA,cAACC,EAAA,EAAD,CAAe1N,MAAOA,GACpByN,EAAA,qBAAKhO,UAAU,OACZsN,EAAQU,EAAA,cAACE,EAAD,CAAW3M,MAAOA,IAAYyM,EAAA,cAACG,EAAD,SCxD/CC,IAASC,OACPxO,EAAAC,EAAAC,cAACF,EAAAC,EAAMwO,WAAP,KACEzO,EAAAC,EAAAC,cAACwO,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.ddbf838e.chunk.js","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId_test = \"c4cbffae207c414eb633445b69de2543\";\r\nconst clientId_deployed = \"9d0dc9720d7a4dca8f0eeb7a146bb258\";\r\nconst redirectUri_test = \"http://localhost:3000/\";\r\nconst redirectUri_deployed =\r\n  \"https://brendanpotter00.github.io/Spotify_Uncovered_v2/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\nexport const deployedLoginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_deployed}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_test}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport { loginUrl } from \"./spotify\";\r\nimport { deployedLoginUrl } from \"./spotify\";\r\nimport \"./login.css\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// gets the user's login token for their spotify\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\r\n        alt=\"Spotify Logo\"\r\n      />\r\n      {/* <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/> */}\r\n\r\n      <Button variant=\"contained\" href={deployedLoginUrl} color=\"primary\">\r\n        login with spotify\r\n      </Button>\r\n      {/* <a href={deployedLoginUrl}>login with spotify</a> */}\r\n\r\n      <button className=\"spotify-button\">\r\n        <a href={loginUrl}>Login for testing</a>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./songCard.css\";\r\nimport {\r\n  createTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider,\r\n} from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nlet theme = createTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction SongCard({ trackInfo }) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div class=\"top20Row\">\r\n        <div class=\"top20Img\">\r\n          <img src={trackInfo.img} alt={\"Song Cover for\" + trackInfo.name} />\r\n        </div>\r\n        <div class=\"songInfo\">\r\n          <div class=\"songName\">\r\n            <Typography variant=\"h4\">{trackInfo.name}</Typography>\r\n          </div>\r\n          <div class=\"songArtist\">\r\n            <Typography variant=\"h5\">{trackInfo.artists}</Typography>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"songMetrics\">\r\n          <div class=\"metric\">\r\n            <div class=\"statName\">\r\n              <Typography variant=\"h5\">{\"Energy: \"}</Typography>\r\n            </div>\r\n            <div class=\"stat\">\r\n              <Typography variant=\"h5\">{trackInfo.energy}</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"statName\">\r\n              <Typography variant=\"h5\">{\"Danceability: \"}</Typography>\r\n            </div>\r\n            <div class=\"stat\">\r\n              <Typography variant=\"h5\">{trackInfo.danceability}</Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"statName\">\r\n              <Typography variant=\"h5\">{\"Happiness: \"}</Typography>\r\n            </div>\r\n            <div class=\"stat\">\r\n              <Typography variant=\"h5\">{trackInfo.valence}</Typography>\r\n            </div>\r\n          </div>\r\n          {/* <div class=\"rank\">1</div> */}\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SongCard;\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport \"./phrases.css\";\r\n\r\nfunction Phrases({ props }) {\r\n  const [phrase, setPhrase] = useState(false);\r\n  let e = props.energy;\r\n  let v = props.valence;\r\n  let l = props.loudness;\r\n\r\n  function isLow(value) {\r\n    return value <= 25;\r\n  }\r\n\r\n  function isLowMed(value) {\r\n    return value <= 40 && value > 25;\r\n  }\r\n\r\n  function isMed(value) {\r\n    return value <= 55 && value > 40;\r\n  }\r\n\r\n  function isMedHigh(value) {\r\n    return value <= 70 && value > 55;\r\n  }\r\n\r\n  function isHigh(value) {\r\n    return value > 70;\r\n  }\r\n\r\n  function determinePhrase() {\r\n    if (isLowMed(v) && isMed(e) && isLowMed(l))\r\n      return \"Feeling kinda meh, huh? It's okay we've all been there\";\r\n    if (\r\n      (isLow(e) || isLowMed(e)) &&\r\n      (isLow(l) || isLowMed(l) || isMed(l)) &&\r\n      (isMedHigh(v) || isHigh(v))\r\n    )\r\n      return \"I think you could stand to spice it up a bit. Not EVERY song needs to be a slow song\";\r\n    if (\r\n      (isMedHigh(e) || isHigh(e)) &&\r\n      (isMedHigh(v) || isHigh(v)) &&\r\n      (isLow(l) || isLowMed(l) || isMed(l))\r\n    )\r\n      return \"Aww you're happy AND energetic?? That's so nice :)\";\r\n    if (\r\n      (isMedHigh(e) || isHigh(e)) &&\r\n      (isMedHigh(l) || isHigh(l)) &&\r\n      (isLow(v) || isLowMed(v) || isMed(v))\r\n    )\r\n      return \"Have you heard of 'chill'? You could use it\";\r\n    if (\r\n      (isLow(e) || isLowMed(e)) &&\r\n      (isLow(v) || isLowMed(v) || isMed(v)) &&\r\n      (isMedHigh(l) || isHigh(l))\r\n    )\r\n      return \"You seem like you could use a pick me up. Grab a coffee and go for a walk\";\r\n    if ((isMedHigh(v) || isHigh(v)) && (isMed(e) || isMedHigh(e) || isHigh(e)))\r\n      return \"Your music suggests you are doing great. Way to embrace 'fake it till you make it'\";\r\n    if (isMed(v) && isMed(l) && isMed(e))\r\n      return \"Nothin wrong with floating in the middle\";\r\n    if (\r\n      ((isMed(v) || isMedHigh(v)) && isMed(l) && isMed(e)) ||\r\n      ((isMed(l) || isMedHigh(l)) && isMed(v) && isMed(e)) ||\r\n      ((isMed(e) || isMedHigh(e)) && isMed(l) && isMed(v))\r\n    )\r\n      return \"Congrats! You're just barely not basic :)\";\r\n    if (isMed(l) && isMed(e)) return \"Ahhh so you're the mellow type\";\r\n    if (isHigh(e))\r\n      return \"Maybe you should lay off the caffeine for a bit, just a suggestion\";\r\n    if (isHigh(l)) return \"Wow... that's really loud. Maybe take a break?\";\r\n    if (isLow(v) || isLowMed(v))\r\n      return \"You seem a bit sad, might I suggest Spotify's 'Mood Booster' playlist\";\r\n    else return \"I like your tunes!\";\r\n  }\r\n\r\n  const handleChange = () => {\r\n    setPhrase(true);\r\n  };\r\n\r\n  //CodePen for Phrase button\r\n  //https://codepen.io/chancesq/pen/MWKREVg?editors=1100\r\n\r\n  return (\r\n    <div className=\"phrase-container\">\r\n      {/* <div className=\"phrase\">{determinePhrase()}</div> */}\r\n\r\n      {phrase ? (\r\n        <div className=\"phrase\">{determinePhrase()}</div>\r\n      ) : (\r\n        <button className=\"phraseButton\" onClick={() => handleChange()}>\r\n          click\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phrases;\r\n","import React from \"react\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { buildStyles } from \"react-circular-progressbar\";\r\nimport \"./statGauge.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Phrases from \"./Phrases\";\r\n\r\nconst percentage = 66;\r\nfunction StatGauge({ props }) {\r\n\r\n  function percentDifference(a, b) {\r\n    return Math.abs(a - b) / ((a + b) / 2);\r\n  }\r\n\r\n// weightedAvgs goes through the values for a certain stat and uses the percent difference between the number\r\n// and 50 to create weights that get multiplied by the value so that the stats are a bit more spread out and more accurate\r\n  function weightedAvgs(metrics) {\r\n    let weights = metrics.map((n) => percentDifference(50, n));\r\n    const [sum, weightSum] = weights.reduce(\r\n      (acc, w, i) => {\r\n        acc[0] = acc[0] + metrics[i] * w;\r\n        acc[1] = acc[1] + w;\r\n        return acc;\r\n      },\r\n      [0, 0]\r\n    );\r\n    return Math.round(sum / weightSum);\r\n  }\r\n\r\n  //getting all energies, loudnesses, and valences in arrays\r\n  let allEnergies = [];\r\n  let allValences = [];\r\n  let allDancies = [];\r\n  for (let track of props) {\r\n    allEnergies.push(track.energy);\r\n    allValences.push(track.valence);\r\n    allDancies.push(track.danceability);\r\n  }\r\n\r\n  //getting the weighted avgerages of all metrics to place in the bars\r\n  let energyAvg = weightedAvgs(allEnergies);\r\n  let valenceAvg = weightedAvgs(allValences);\r\n  let danceAvg = weightedAvgs(allDancies);\r\n\r\n  // sends the weighted avgs to the phrase component to determine the phrase the user gets\r\n  let phraseProps = {\r\n    energy: energyAvg,\r\n    valence: valenceAvg,\r\n    loudness: danceAvg,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bars\">\r\n        <div className=\"firstbar\">\r\n          <CircularProgressbar\r\n            className=\"circleBar\"\r\n            value={energyAvg}\r\n            text={`${energyAvg}`}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              rotation: 1,\r\n              strokeLinecap: \"round\",\r\n              textSize: \"1.8rem\",\r\n              pathTransitionDuration: 0.5,\r\n              backgroundColor: \"#FDA766\",\r\n              textColor: \"#fff\",\r\n              pathColor: \"#fff\",\r\n              trailColor: \"transparent\",\r\n            })}\r\n          />\r\n          <h3> Energy </h3>\r\n        </div>\r\n        <div className=\"secondbar\">\r\n          <CircularProgressbar\r\n            className=\"circleBar\"\r\n            value={valenceAvg}\r\n            text={`${valenceAvg}`}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              rotation: 1,\r\n              strokeLinecap: \"round\",\r\n              textSize: \"1.8rem\",\r\n              pathTransitionDuration: 0.5,\r\n              backgroundColor: \"#FD9346\",\r\n              textColor: \"#fff\",\r\n              pathColor: \"#fff\",\r\n              trailColor: \"transparent\",\r\n            })}\r\n          />\r\n\r\n          <h3> Happiness </h3>\r\n        </div>\r\n        <div className=\"thirdbar\">\r\n          <CircularProgressbar\r\n            className=\"circleBar\"\r\n            value={danceAvg}\r\n            text={`${danceAvg}`}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              rotation: 1,\r\n              strokeLinecap: \"round\",\r\n              textSize: \"1.8rem\",\r\n              pathTransitionDuration: 0.5,\r\n              backgroundColor: \"#FD7F2C\",\r\n              textColor: \"#fff\",\r\n              pathColor: \"#fff\",\r\n              trailColor: \"transparent\",\r\n            })}\r\n          />\r\n          <h3> Danceability </h3>\r\n        </div>\r\n      </div>\r\n      <Phrases props={phraseProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatGauge;\r\n","import React, { useEffect, useState, useRef, Component } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SearchBar({ props }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchFts, setSearchFts] = useState([]);\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 400);\r\n  const spotify = props.spotify;\r\n\r\n  function intForZeroToOne(metric) {\r\n    return Math.round(metric * 100);\r\n  }\r\n\r\n  const handleChange = async (event) => {\r\n    await setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // Creates a delay between the input and the searching so the rendering doesn't breat\r\n  function useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }\r\n\r\n  // On search term change this gets the top 3 results from the spotify api and the stats we use for them and sets\r\n  // this info to searchResults\r\n  useEffect(() => {\r\n    setSearchFts([]);\r\n    const searchResults = spotify\r\n      .searchTracks(searchTerm, { limit: 3, offset: 0 })\r\n      .then((results) => {\r\n        let resultFts = results.tracks.items.map((track) => {\r\n          spotify.getAudioFeaturesForTrack(track.id).then((info) => {\r\n            let temp = {\r\n              id: track.id,\r\n              name: track.name,\r\n              artists: track.artists[0].name,\r\n              energy: intForZeroToOne(info.energy),\r\n              valence: intForZeroToOne(info.valence),\r\n              danceability: intForZeroToOne(info.danceability),\r\n              img: track.album.images[0].url,\r\n            };\r\n            setSearchFts((searchFts) => [...searchFts, temp]);\r\n          });\r\n        });\r\n      });\r\n  }, [debouncedSearchTerm]);\r\n\r\n  let html = [];\r\n\r\n  for (let track of searchFts) {\r\n    const ret = (\r\n      <div class=\"top20Row\">\r\n        <div class=\"top20Img\">\r\n          <img src={track.img} alt={\"Song Cover for\" + track.name} />\r\n        </div>\r\n        <div class=\"songInfo\">\r\n          <div class=\"songName\">{track.name}</div>\r\n          <div class=\"songArtist\">{track.artists}</div>\r\n        </div>\r\n\r\n        <div class=\"songMetrics\">\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Energy: \"}</div>\r\n            <div class=\"stat\">{track.energy}</div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Dance: \"}</div>\r\n            <div class=\"stat\">{track.danceability}</div>\r\n          </div>\r\n\r\n          <div class=\"metric\">\r\n            <div class=\"stringName\">{\"Happiness: \"}</div>\r\n            <div class=\"stat\">{track.valence}</div>\r\n          </div>\r\n          {/* <div class=\"rank\">1</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n    html.push(ret);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            spotify uncovered\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleChange}\r\n              value={searchTerm}\r\n              //onChange={(value) => this.getSearchResults(value.target.value)}\r\n              //onSearch={(value) => console.log(value)}\r\n              //onRequestSearch={searchTracksFunction(search)}\r\n            />\r\n          </Search>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div className=\"searchResultsContainer\">\r\n        <div class=\"topResults\">{html}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport SongCard from \"./SongCard.js\";\r\nimport StatGauge from \"./StatGauge\";\r\nimport SearchBar from \"./SearchBar.js\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nfunction Dashboard({ props }) {\r\n  const spotify = props.spotify;\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  //FUNCTION CREATION HERE===============================================\r\n  // valence: float 0-1\r\n  // loudness: float 0-60 DB\r\n  // energy: float 0-1\r\n  //https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features\r\n\r\n  function intForZeroToOne(metric) {\r\n    return Math.round(metric * 100);\r\n  }\r\n\r\n// On component mount this gets the user's top 20 tracks from the spotify api and the stats we use for them and sets\r\n// this info to trackList\r\n\r\n  useEffect(() => {\r\n    let trackList = [];\r\n    spotify.getMyTopTracks().then(\r\n      (tracks) => {\r\n        let trackFts = tracks.items.map((track) => {\r\n          spotify.getAudioFeaturesForTrack(track.id).then((results) => {\r\n            let temp = {\r\n              id: track.id,\r\n              name: track.name,\r\n              artists: track.artists[0].name,\r\n              energy: intForZeroToOne(results.energy),\r\n              valence: intForZeroToOne(results.valence),\r\n              danceability: intForZeroToOne(results.danceability),\r\n              img: track.album.images[0].url,\r\n            };\r\n            setTracks((tracks) => [...tracks, temp]);\r\n          });\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log(\"Error:\", err);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard_container\">\r\n      <SearchBar props={props}></SearchBar>\r\n      <StatGauge props={tracks} />\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <div class=\"top20Table\">\r\n          <Stack spacing={2}>\r\n            {tracks.map((track) => (\r\n              <SongCard trackInfo={track}></SongCard>\r\n            ))}\r\n          </Stack>\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import \"./App.css\";\r\nimport Login from \"./Login.js\";\r\nimport Dashboard from \"./Dashboard.js\";\r\n// import React, { useEffect, useState } from \"react\";\r\nimport { getTokenFromResponse } from \"./spotify.js\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#DF7C52\",\r\n      main: \"#d85c27\",\r\n      dark: \"#97401B\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#587CA5\",\r\n      main: \"#2f5c8f\",\r\n      dark: \"#204064\",\r\n      contrastText: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nfunction App() {\r\n  const [token, setToken] = React.useState(null);\r\n  const [user, setUser] = React.useState(null);\r\n\r\n  //This function sets the access token and gets the user with the access code given from the spotify api\r\n  React.useEffect(() => {\r\n    //code...\r\n    const hash = getTokenFromResponse();\r\n    window.location.hash = \"\";\r\n    const _token = hash.access_token;\r\n\r\n    if (_token) {\r\n      setToken(_token);\r\n\r\n      spotify.setAccessToken(_token);\r\n      //grabbing the user\r\n      spotify.getMe().then((user) => {\r\n        setUser(user);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  let props = {\r\n    spotify: spotify,\r\n    token: token,\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        {token ? <Dashboard props={props} /> : <Login />}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["spotify.js","Login.js","SongCard.js","Phrases.js","StatGauge.js","SearchBar.js","Dashboard.js","App.js","index.js"],"names":["authEndpoint","scopes","getTokenFromResponse","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","deployedLoginUrl","concat","join","loginUrl","Login","react_default","a","createElement","className","src","alt","Button","variant","href","color","theme","createTheme","responsiveFontSizes","SongCard","_ref","trackInfo","ThemeProvider","class","img","name","Typography","sx","typography","xs","sm","artists","energy","danceability","valence","Phrases","props","_useState","useState","_useState2","Object","slicedToArray","phrase","setPhrase","e","v","d","dance","isLow","value","isLowMed","isMed","isMedHigh","isHigh","onClick","borderRadius","padding","StatGauge","weightedAvgs","metrics","_weights$reduce","map","n","b","Math","abs","acc","w","i","_weights$reduce2","sum","weightSum","round","_step","allEnergies","allValences","allDancies","_iterator","_createForOfIteratorHelper","s","done","track","push","err","f","energyAvg","valenceAvg","danceAvg","phraseProps","index_esm","text","background","backgroundPadding","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","backgroundColor","textColor","pathColor","trailColor","md","src_Phrases","Search","styled","defineProperty","position","shape","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","transition","transitions","create","&:focus","SearchBar","_ref5","searchTerm","setSearchTerm","_useState3","_useState4","searchFts","setSearchFts","debouncedSearchTerm","delay","_useState5","_useState6","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","spotify","intForZeroToOne","metric","handleChange","_ref6","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","target","stop","_x","apply","this","arguments","searchTracks","limit","offset","then","results","tracks","items","getAudioFeaturesForTrack","id","info","temp","album","images","url","toConsumableArray","html","SearchBar_createForOfIteratorHelper","ret","AppBar","Toolbar","noWrap","component","flexGrow","SearchBar_Search","Search_default","placeholder","inputProps","aria-label","onChange","Dashboard","setTracks","_React$useState","React","_React$useState2","loading","setLoading","getMyTopTracks","console","log","BarLoader_default","src_SearchBar","src_StatGauge","Box","Stack","src_SongCard","type","primary","light","main","dark","contrastText","secondary","default","paper","SpotifyWebApi","App","token","setToken","_React$useState3","_React$useState4","setUser","_token","access_token","setAccessToken","getMe","user","react","emotion_element_cbed451f_browser_esm","src_Dashboard","src_Login","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.72bdcfa3.chunk.js","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId_test = \"c4cbffae207c414eb633445b69de2543\";\nconst clientId_deployed = \"9d0dc9720d7a4dca8f0eeb7a146bb258\";\nconst redirectUri_test = \"http://localhost:3000/\";\nconst redirectUri_deployed =\n  \"https://brendanpotter00.github.io/Spotify_Uncovered_v2/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromResponse = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\nexport const deployedLoginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_deployed}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId_test}&redirect_uri=${redirectUri_test}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport { loginUrl } from \"./spotify\";\nimport { deployedLoginUrl } from \"./spotify\";\nimport \"./login.css\";\nimport Button from \"@mui/material/Button\";\n\n// gets the user's login token for their spotify\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\n        alt=\"Spotify Logo\"\n      />\n\n      <Button variant=\"contained\" href={deployedLoginUrl} color=\"primary\">\n        login with spotify\n      </Button>\n\n      <button className=\"spotify-button\">\n        <a href={loginUrl}>Login for testing</a>\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./songCard.css\";\nimport {\n  createTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nfunction setText(txt) {}\n\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nfunction SongCard({ trackInfo }) {\n  return (\n    //for topography I used this as reference: https://mui.com/material-ui/customization/typography/\n    //sx in Material ui is used to add additional css\n    //the size of the fonts changes with the scaling of the app here is the refere for the sizing https://v3.mui.com/layout/breakpoints/\n    <ThemeProvider theme={theme}>\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={trackInfo.img} alt={\"Song Cover for\" + trackInfo.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">\n            <Typography sx={{ typography: { xs: \"h3\", sm: \"h4\" } }}>\n              {trackInfo.name}\n            </Typography>\n          </div>\n          <div class=\"songArtist\">\n            <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n              {trackInfo.artists}\n            </Typography>\n          </div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n                {\"Energy: \"}\n              </Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n                {trackInfo.energy}\n              </Typography>\n            </div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n                {\"Danceability: \"}\n              </Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n                {trackInfo.danceability}\n              </Typography>\n            </div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"statName\">\n              <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n                {\"Happiness: \"}\n              </Typography>\n            </div>\n            <div class=\"stat\">\n              <Typography sx={{ typography: { xs: \"h4\", sm: \"h5\" } }}>\n                {trackInfo.valence}\n              </Typography>\n            </div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default SongCard;\n","import React, { useEffect, useState, Component } from \"react\";\nimport \"./phrases.css\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction Phrases({ props }) {\n  const [phrase, setPhrase] = useState(false);\n  let e = props.energy;\n  let v = props.valence;\n  let d = props.dance;\n\n  function isLow(value) {\n    return value <= 25;\n  }\n\n  function isLowMed(value) {\n    return value <= 40 && value > 25;\n  }\n\n  function isMed(value) {\n    return value <= 55 && value > 40;\n  }\n\n  function isMedHigh(value) {\n    return value <= 70 && value > 55;\n  }\n\n  function isHigh(value) {\n    return value > 70;\n  }\n\n  function determinePhrase() {\n    if (isLowMed(v) && isMed(e) && isLowMed(d))\n      return \"Feeling kinda meh, huh? It's okay we've all been there\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(d) || isLowMed(d) || isMed(d)) &&\n      (isMedHigh(v) || isHigh(v))\n    )\n      return \"I think you could stand to spice it up a bit. Not EVERY song needs to be a slow song\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(v) || isHigh(v)) &&\n      (isLow(d) || isLowMed(d) || isMed(d))\n    )\n      return \"Aww you're happy AND energetic?? That's so nice :)\";\n    if (\n      (isMedHigh(e) || isHigh(e)) &&\n      (isMedHigh(d) || isHigh(d)) &&\n      (isLow(v) || isLowMed(v) || isMed(v))\n    )\n      return \"Have you heard of 'chill'? You could use it\";\n    if (\n      (isLow(e) || isLowMed(e)) &&\n      (isLow(v) || isLowMed(v) || isMed(v)) &&\n      (isLow(d) || isLowMed(d) || isMed(d))\n      // (isMedHigh(d) || isHigh(d))\n    )\n      return \"You seem like you could use a pick me up. Grab a coffee and go for a walk\";\n    if ((isMedHigh(v) || isHigh(v)) && (isMed(e) || isMedHigh(e) || isHigh(e)))\n      return \"Your music suggests you are doing great. Way to embrace 'fake it till you make it'\";\n    if (isMed(v) && isMed(d) && isMed(e))\n      return \"Nothin wrong with floating in the middle\";\n    if (\n      ((isMed(v) || isMedHigh(v)) && isMed(d) && isMed(e)) ||\n      ((isMed(d) || isMedHigh(d)) && isMed(v) && isMed(e)) ||\n      ((isMed(e) || isMedHigh(e)) && isMed(d) && isMed(v))\n    )\n      return \"Congrats! You're just barely not basic :)\";\n    if (isMed(d) && isMed(e)) return \"Ahhh so you're the mellow type\";\n    if (isHigh(e))\n      return \"Maybe you should lay off the caffeine for a bit, just a suggestion\";\n    if (isHigh(d)) return \"Wow... I hope you're at least a good dancer\";\n    if (isLow(v) || isLowMed(v))\n      return \"You seem a bit sad, might I suggest Spotify's 'Mood Booster' playlist\";\n    else return \"I like your tunes!\";\n  }\n\n  const handleChange = () => {\n    setPhrase(true);\n  };\n\n  //CodePen for Phrase button\n  //https://codepen.io/chancesq/pen/MWKREVg?editors=1100\n\n  return (\n    <div className=\"phrase-container\">\n      {/* <div className=\"phrase\">{determinePhrase()}</div> */}\n\n      {phrase ? (\n        <Typography sx={{ typography: { xs: \"h3\", sm: \"h4\" } }}>\n          {determinePhrase()}\n        </Typography>\n      ) : (\n        // <div className=\"phrase\"></div>\n        // <button className=\"phraseButton\" onClick={() => handleChange()}>\n        //   click\n        // </button>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleChange()}\n          color=\"primary\"\n          sx={{ borderRadius: 7 }}\n        >\n          <Typography sx={{ padding: 1 }} variant=\"h6\">\n            Click Me\n          </Typography>\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default Phrases;\n","import React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport { buildStyles } from \"react-circular-progressbar\";\nimport \"./statGauge.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Phrases from \"./Phrases\";\nimport Typography from \"@mui/material/Typography\";\n\nconst percentage = 66;\nfunction StatGauge({ props }) {\n  function percentDifference(a, b) {\n    return Math.abs(a - b) / ((a + b) / 2);\n  }\n\n  // weightedAvgs goes through the values for a certain stat and uses the percent difference between the number\n  // and 50 to create weights that get multiplied by the value so that the stats are a bit more spread out and more accurate\n  function weightedAvgs(metrics) {\n    let weights = metrics.map((n) => percentDifference(50, n));\n    const [sum, weightSum] = weights.reduce(\n      (acc, w, i) => {\n        acc[0] = acc[0] + metrics[i] * w;\n        acc[1] = acc[1] + w;\n        return acc;\n      },\n      [0, 0]\n    );\n    return Math.round(sum / weightSum);\n  }\n\n  //getting all energies, loudnesses, and valences in arrays\n  let allEnergies = [];\n  let allValences = [];\n  let allDancies = [];\n  for (let track of props) {\n    allEnergies.push(track.energy);\n    allValences.push(track.valence);\n    allDancies.push(track.danceability);\n  }\n\n  //getting the weighted avgerages of all metrics to place in the bars\n  let energyAvg = weightedAvgs(allEnergies);\n  let valenceAvg = weightedAvgs(allValences);\n  let danceAvg = weightedAvgs(allDancies);\n\n  // sends the weighted avgs to the phrase component to determine the phrase the user gets\n  let phraseProps = {\n    energy: energyAvg,\n    valence: valenceAvg,\n    dance: danceAvg,\n  };\n\n  return (\n    <div>\n      <div className=\"bars\">\n        <div className=\"firstbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={energyAvg}\n            text={`${energyAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FDA766\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <Typography\n            sx={{\n              padding: 1,\n              typography: { xs: \"Subtitle2\", sm: \"h5\", md: \"h4\" },\n            }}\n          >\n            Energy\n          </Typography>\n        </div>\n        <div className=\"secondbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={valenceAvg}\n            text={`${valenceAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD9346\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <Typography\n            sx={{\n              padding: 1,\n              typography: { xs: \"Subtitle2\", sm: \"h5\", md: \"h4\" },\n            }}\n          >\n            Happiness\n          </Typography>\n        </div>\n        <div className=\"thirdbar\">\n          <CircularProgressbar\n            className=\"circleBar\"\n            value={danceAvg}\n            text={`${danceAvg}`}\n            background\n            backgroundPadding={6}\n            styles={buildStyles({\n              rotation: 1,\n              strokeLinecap: \"round\",\n              textSize: \"1.8rem\",\n              pathTransitionDuration: 0.5,\n              backgroundColor: \"#FD7F2C\",\n              textColor: \"#fff\",\n              pathColor: \"#fff\",\n              trailColor: \"transparent\",\n            })}\n          />\n          <Typography\n            sx={{\n              padding: 1,\n              typography: { xs: \"Subtitle2\", sm: \"h5\", md: \"h4\" },\n            }}\n          >\n            Danceability\n          </Typography>\n        </div>\n      </div>\n      <Phrases props={phraseProps} />\n    </div>\n  );\n}\n\nexport default StatGauge;\n","import React, { useEffect, useState, useRef, Component } from \"react\";\nimport \"./searchBar.css\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nfunction SearchBar({ props }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchFts, setSearchFts] = useState([]);\n  const debouncedSearchTerm = useDebounce(searchTerm, 400);\n  const spotify = props.spotify;\n\n  function intForZeroToOne(metric) {\n    return Math.round(metric * 100);\n  }\n\n  const handleChange = async (event) => {\n    await setSearchTerm(event.target.value);\n  };\n\n  // Creates a delay between the input and the searching so the rendering doesn't breat\n  function useDebounce(value, delay) {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }\n\n  // On search term change this gets the top 3 results from the spotify api and the stats we use for them and sets\n  // this info to searchResults\n  useEffect(() => {\n    setSearchFts([]);\n    const searchResults = spotify\n      .searchTracks(searchTerm, { limit: 3, offset: 0 })\n      .then((results) => {\n        let resultFts = results.tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((info) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: intForZeroToOne(info.energy),\n              valence: intForZeroToOne(info.valence),\n              danceability: intForZeroToOne(info.danceability),\n              img: track.album.images[0].url,\n            };\n            setSearchFts((searchFts) => [...searchFts, temp]);\n          });\n        });\n      });\n  }, [debouncedSearchTerm]);\n\n  let html = [];\n\n  for (let track of searchFts) {\n    const ret = (\n      <div class=\"top20Row\">\n        <div class=\"top20Img\">\n          <img src={track.img} alt={\"Song Cover for\" + track.name} />\n        </div>\n        <div class=\"songInfo\">\n          <div class=\"songName\">{track.name}</div>\n          <div class=\"songArtist\">{track.artists}</div>\n        </div>\n\n        <div class=\"songMetrics\">\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Energy: \"}</div>\n            <div class=\"stat\">{track.energy}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Dance: \"}</div>\n            <div class=\"stat\">{track.danceability}</div>\n          </div>\n\n          <div class=\"metric\">\n            <div class=\"stringName\">{\"Happiness: \"}</div>\n            <div class=\"stat\">{track.valence}</div>\n          </div>\n          {/* <div class=\"rank\">1</div> */}\n        </div>\n      </div>\n    );\n    html.push(ret);\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            spotify uncovered\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={handleChange}\n              value={searchTerm}\n              //onChange={(value) => this.getSearchResults(value.target.value)}\n              //onSearch={(value) => console.log(value)}\n              //onRequestSearch={searchTracksFunction(search)}\n            />\n          </Search>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"searchResultsContainer\">\n        <div class=\"topResults\">{html}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useEffect, useState, Component } from \"react\";\nimport \"./dashboard.css\";\nimport SongCard from \"./SongCard.js\";\nimport StatGauge from \"./StatGauge\";\nimport SearchBar from \"./SearchBar.js\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\n\nfunction Dashboard({ props }) {\n  const spotify = props.spotify;\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  //FUNCTION CREATION HERE===============================================\n  // valence: float 0-1\n  // loudness: float 0-60 DB\n  // energy: float 0-1\n  //https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features\n\n  function intForZeroToOne(metric) {\n    return Math.round(metric * 100);\n  }\n\n  // On component mount this gets the user's top 20 tracks from the spotify api and the stats we use for them and sets\n  // this info to trackList\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 3000);\n    let trackList = [];\n    spotify.getMyTopTracks().then(\n      (tracks) => {\n        let trackFts = tracks.items.map((track) => {\n          spotify.getAudioFeaturesForTrack(track.id).then((results) => {\n            let temp = {\n              id: track.id,\n              name: track.name,\n              artists: track.artists[0].name,\n              energy: intForZeroToOne(results.energy),\n              valence: intForZeroToOne(results.valence),\n              danceability: intForZeroToOne(results.danceability),\n              img: track.album.images[0].url,\n            };\n            setTracks((tracks) => [...tracks, temp]);\n          });\n        });\n      },\n      (err) => {\n        console.log(\"Error:\", err);\n      }\n    );\n  }, []);\n  return (\n    <div className=\"loading\">\n     {loading ? <div className=\"loadBar\"> \n      <BarLoader height={5} width={300} color = {\"#FD9346\"} loading={loading}/> \n      <h3 className=\"text\"> Analyzing Data</h3>\n     </div>\n     :\n      <div className=\"dashboard_container\">\n        <SearchBar props={props}></SearchBar>\n        <StatGauge props={tracks} />\n        <Box sx={{ width: \"100%\" }}>\n          <div class=\"top20Table\">\n            <Stack spacing={2}>\n              {tracks.map((track) => (\n                <SongCard trackInfo={track}></SongCard>\n              ))}\n            </Stack>\n          </div>\n        </Box>\n      </div>}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import \"./App.css\";\nimport Login from \"./Login.js\";\nimport Dashboard from \"./Dashboard.js\";\n//import React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify.js\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport * as React from \"react\";\n\nimport { createTheme } from \"@mui/material/styles\";\nimport { ThemeProvider } from \"@emotion/react\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      light: \"#DF7C52\",\n      main: \"#d85c27\",\n      dark: \"#97401B\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#587CA5\",\n      main: \"#2f5c8f\",\n      dark: \"#204064\",\n      contrastText: \"#fff\",\n    },\n    shape: {\n      borderRadius: 4,\n    },\n    background: {\n      default: \"#303030\",\n      paper: \"#424242\",\n    },\n    text: {\n      primary: \"#d85c27\",\n      secondary: \"#DF7C52\",\n      default: \"#FFFFFF\",\n    },\n  },\n});\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  //This function sets the access token and gets the user with the access code given from the spotify api\n  React.useEffect(() => {\n    //code...\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n\n    if (_token) {\n      setToken(_token);\n\n      spotify.setAccessToken(_token);\n      //grabbing the user\n      spotify.getMe().then((user) => {\n        setUser(user);\n      });\n    }\n  }, []);\n\n  let props = {\n    spotify: spotify,\n    token: token,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {token ? <Dashboard props={props} /> : <Login />}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}